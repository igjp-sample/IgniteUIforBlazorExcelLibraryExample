{"version":3,"file":"igniteui-webcomponents-maps.b1c71e1b345a89b03641.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-charts/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tlp(): void {\r\n\t\tsuper.lp();\r\n\t\tif (this.qe != null) {\r\n\t\t\tthis.qe.lp();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.qe = this.qd();\r\n\t}\r\n\tprivate qc: Series = null;\r\n\tprotected get_dy(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\th1(a: any, b: string): any {\r\n\t\tlet c = this.jv(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.qe.h1(a, b);\r\n\t}\r\n\tc2(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number): boolean {\r\n\t\treturn this.qe.c2(a, b, c, d);\r\n\t}\r\n\tag(): Axis[] {\r\n\t\treturn this.qe.ag();\r\n\t}\r\n\tbf(): Series {\r\n\t\treturn this.qe;\r\n\t}\r\n\tget qe(): Series {\r\n\t\treturn this.qc;\r\n\t}\r\n\tset qe(a: Series) {\r\n\t\tlet b: boolean = this.qe != a;\r\n\t\tif (b) {\r\n\t\t\tthis.qc = a;\r\n\t\t\tthis.qj();\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.qe.hasMarkers;\r\n\t}\r\n\tprotected qj(): void {\r\n\t\tif (this.qc != null) {\r\n\t\t\tlet hostedSeries_ = this.qc;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.k7(this.qe);\r\n\t\tthis.qf.b2();\r\n\t}\r\n\tax(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.az(this.qe, a, b, c);\r\n\t}\r\n\tay(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.a0(this.qe, a, b, c);\r\n\t}\r\n\thy(a: Point): any {\r\n\t\treturn this.h3(this.qe, a);\r\n\t}\r\n\tho(a: Point, b: boolean): number {\r\n\t\treturn this.qe.ho(a, b);\r\n\t}\r\n\thm(a: Point, b: boolean): number {\r\n\t\treturn this.qe.hm(a, b);\r\n\t}\r\n\tgn(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.gn(a, b, c);\r\n\t}\r\n\tps(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.ps(a, b, c);\r\n\t}\r\n\tp3(a: Point): Rect {\r\n\t\treturn this.qe.p3(a);\r\n\t}\r\n\tak(a: Point): Rect[] {\r\n\t\treturn this.qe.ak(a);\r\n\t}\r\n\tp4(a: Point): Rect {\r\n\t\treturn this.qe.p4(a);\r\n\t}\r\n\tal(a: Point): Rect[] {\r\n\t\treturn this.qe.al(a);\r\n\t}\r\n\tp5(a: Point): Rect {\r\n\t\treturn this.qe.p5(a);\r\n\t}\r\n\tp6(a: Point): Rect {\r\n\t\treturn this.qe.p6(a);\r\n\t}\r\n\tgj(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.gj(a, b, c);\r\n\t}\r\n\tpo(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.po(a, b, c);\r\n\t}\r\n\tgl(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.gn(a, b, c);\r\n\t}\r\n\tpq(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.pq(a, b, c);\r\n\t}\r\n\tpt(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.pt(a, b, c);\r\n\t}\r\n\tgo(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.go(a, b, c);\r\n\t}\r\n\tpp(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.pp(a, b, c);\r\n\t}\r\n\tgk(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.gk(a, b, c);\r\n\t}\r\n\tpr(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.pr(a, b, c);\r\n\t}\r\n\tgm(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.gm(a, b, c);\r\n\t}\r\n\thj(a: Point): number {\r\n\t\treturn this.qe.hj(a);\r\n\t}\r\n\tge(): number {\r\n\t\treturn this.qe.ge();\r\n\t}\r\n\tga(a: Point): number {\r\n\t\treturn this.qe.ga(a);\r\n\t}\r\n\thz(a: Point): any {\r\n\t\treturn this.qe.hz(a);\r\n\t}\r\n\tprotected abstract qd(): Series;\r\n\tprotected by(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.qf = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\tqf: HostSeriesView;\r\n\tstatic readonly ql: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget qg(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.ql);\r\n\t}\r\n\tset qg(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.ql, a);\r\n\t}\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qe.ce = this.ce;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).oq(this.qe);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.ce.ll(this.qe);\r\n\t\t\t}\r\n\t\t\tthis.qe.mc(this.p7);\r\n\t\t\tthis.qe.index = this.index;\r\n\t\t\tthis.ld(this.qe);\r\n\t\t\tthis.ht = this.qe.ht;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.qk));\r\n\t\t\t}\r\n\t\t\tif (this.ce != null) {\r\n\t\t\t\tlet f = this.ce;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.qk));\r\n\t\t\t}\r\n\t\t\tthis.qi();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.qe.b9 = this.b9;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.qi();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.qe.index = this.index;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.qf.b3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.qf.ca();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.qf.cd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.qf.b7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.qe;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.qe.eo = this.eo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.qe.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.qf.cc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.qf.b1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.qf.b9();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.qf.by();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.qf.bz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.gv)) {\r\n\t\t\t\tthis.qf.b6();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.f3)) {\r\n\t\t\t\tthis.qf.b0();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.qf.b8();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.qf.cb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.qe.title = this.title;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.qf.b4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.qf.b5();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.qe.legend = this.legend;\r\n\t\t\tthis.b1.at();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate qi(): void {\r\n\t\tif (this.ce == null || this.qe == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.qg)) {\r\n\t\t\tif (this.ce.ta.width > this.qg) {\r\n\t\t\t\tlet hs_ = this.qe;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.qe;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate qk(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.qi();\r\n\t}\r\n\tmn(a: boolean): void {\r\n\t\tsuper.mn(a);\r\n\t\tif (this.qe != null) {\r\n\t\t\tthis.qe.mn(a);\r\n\t\t}\r\n\t}\r\n\tmm(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.qe != null) {\r\n\t\t\tthis.qe.mm(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\tau(a: Point, b: boolean): DataContext {\r\n\t\treturn this.qe.au(a, b);\r\n\t}\r\n\tmx(): void {\r\n\t\tsuper.mx();\r\n\t\tthis.qe.mx();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.qe.coercionMethods = a;\r\n\t}\r\n\tprotected lc(a: any): void {\r\n\t\tsuper.lc(a);\r\n\t\tif (this.qe != null) {\r\n\t\t\tlet b = this.qe.hx();\r\n\t\t\tthis.k4(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.bx = a;\r\n\t}\r\n\tprivate bx: GeographicMapSeriesHost = null;\r\n\tar(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.ar(a, b);\r\n\t}\r\n\tb2(): void {\r\n\t\tthis.bx.qb = 1;\r\n\t\tthis.bx.qe.qb = 0;\r\n\t\tthis.bx.qe.itemsSource = this.bx.itemsSource;\r\n\t\tthis.bx.qe.index = this.bx.index;\r\n\t\tthis.bx.qe.o9 = this.bx.o9;\r\n\t\tthis.bx.qe.pe = this.bx.o9;\r\n\t\tthis.bx.qe.bu = this.bx.bu;\r\n\t\tthis.bx.qe.gy = this.bx.gy;\r\n\t\tthis.bx.qe.hr = this.bx.hr;\r\n\t\tthis.bx.qe._opacity = this.bx._opacity;\r\n\t\tthis.bx.qe.g4 = this.bx.g4;\r\n\t\tthis.bx.qe.f3 = this.bx.f3;\r\n\t\tthis.bx.qe.gv = this.bx.gv;\r\n\t\tthis.bx.qe.ev = this.bx.ev;\r\n\t\tthis.bx.qe.legendItemBadgeShape = this.bx.legendItemBadgeShape;\r\n\t\tthis.bx.qe.ba = this.bx.ba;\r\n\t}\r\n\tb3(): void {\r\n\t\tthis.bx.qe.itemsSource = this.bx.itemsSource;\r\n\t}\r\n\tca(): void {\r\n\t\tthis.bx.qe.gy = this.bx.gy;\r\n\t}\r\n\tcd(): void {\r\n\t\tthis.bx.qe.hr = this.bx.hr;\r\n\t}\r\n\tb7(): void {\r\n\t\tthis.bx.qe._opacity = this.bx._opacity;\r\n\t}\r\n\tcc(): void {\r\n\t\tthis.bx.qe.g4 = this.bx.g4;\r\n\t}\r\n\tb1(): void {\r\n\t\tthis.bx.qe.o9 = this.bx.o9;\r\n\t}\r\n\tb9(): void {\r\n\t\tthis.bx.qe.pe = this.bx.pe;\r\n\t}\r\n\tby(): void {\r\n\t\tthis.bx.qe.o9 = this.bx.o5;\r\n\t}\r\n\tbz(): void {\r\n\t\tthis.bx.qe.pe = this.bx.o8;\r\n\t}\r\n\tb4(): void {\r\n\t\tthis.bx.qe.ba = this.bx.ba;\r\n\t}\r\n\tb5(): void {\r\n\t\tthis.bx.qe.legendItemBadgeShape = this.bx.legendItemBadgeShape;\r\n\t}\r\n\tb0(): void {\r\n\t\tthis.bx.qe.f3 = this.bx.f3;\r\n\t}\r\n\tb6(): void {\r\n\t\tthis.bx.qe.gv = this.bx.gv;\r\n\t}\r\n\tb8(): void {\r\n\t\tthis.bx.qe.bu = this.bx.bu;\r\n\t}\r\n\tcb(): void {\r\n\t\tthis.bx.qe.ev = this.bx.ev;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.qe;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.q2));\r\n\t}\r\n\tnj(): DataTemplate {\r\n\t\treturn this.q3;\r\n\t}\r\n\tpc(): Brush {\r\n\t\treturn this.rg;\r\n\t}\r\n\tpd(): Brush {\r\n\t\treturn this.rh;\r\n\t}\r\n\tf6(): number {\r\n\t\treturn this.qp;\r\n\t}\r\n\ti2(): string {\r\n\t\tlet a = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.qe);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.i2();\r\n\t}\r\n\tprivate q2(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.qe);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.q3 = c.q5;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.rh = c.rm;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.rg = c.rl;\r\n\t\t}\r\n\t}\r\n\tqo: MarkerType;\r\n\tqp: number;\r\n\tqn: MarkerOutlineMode;\r\n\tqm: MarkerFillMode;\r\n\tq4: DataTemplate;\r\n\tri: Brush;\r\n\trj: Brush;\r\n\tqq: number;\r\n\tq3: DataTemplate;\r\n\trg: Brush;\r\n\trh: Brush;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qe).rn = this.ri;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.qe).ro = this.rj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.qe).qi = this.qn;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.qe).qe = this.qm;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.qe).ql = this.qo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.qe).q7 = this.q4;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.qe).qq = this.qp;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.qe).tb = this.qq;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:rg:q5', [ (<any>Brush).$ ], 'ActualMarkerOutline:rh:q6', [ (<any>Brush).$ ], 'ActualMarkerTemplate:q3:q7', [ (<any>DataTemplate).$, null ], 'MarkerBrush:ri:q8', [ (<any>Brush).$ ], 'MarkerFillMode:qm:q9', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:qn:ra', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:rj:rb', [ (<any>Brush).$ ], 'MarkerTemplate:q4:rc', [ (<any>DataTemplate).$, null ], 'MarkerThickness:qp:rd', [ 1, DeviceUtils.g(2) ], 'MarkerType:qo:re', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:qq:rf', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\tqp: GeographicShapeSeriesBaseView;\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.qp = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\tq7: string;\r\n\tprotected get_d0(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_c3(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tqw: boolean;\r\n\tqv: boolean;\r\n\tprotected qu: boolean = false;\r\n\tprotected qt: boolean = false;\r\n\tqo: ShapeItemSearchMode;\r\n\tqz: number;\r\n\tqy: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qp.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.qp.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\tthis.qp.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).rd = this.qw;\r\n\t\t\tthis.qu = this.qw;\r\n\t\t\tif (this.qw) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.qe);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.ra));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.qe);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.ra));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).rc = this.qv;\r\n\t\t\tthis.qt = this.qv;\r\n\t\t\tif (this.qw) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.qe);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.q9));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.qe);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.q9));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).qz = this.qo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).ru = this.qy;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).rv = this.qz;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.qs) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.rb));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.rc();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.qs = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.rb));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate ra(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q9(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate rb(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.rc();\r\n\t}\r\n\tprivate rc(): void {\r\n\t\tlet sds_ = this.qr;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate qq: ShapefileConverter = null;\r\n\tprivate qs: boolean = false;\r\n\tget qr(): ShapefileConverter {\r\n\t\treturn this.qq;\r\n\t}\r\n\tset qr(a: ShapefileConverter) {\r\n\t\tlet b = this.qq;\r\n\t\tthis.qq = a;\r\n\t\tif (b != this.qq) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.qq);\r\n\t\t}\r\n\t}\r\n\tqx: number;\r\n\tprotected get_e7(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e7(a: boolean): void {\r\n\t\tsuper.set_e7(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'IsCustomShapeMarkerStyleAllowed:qv:rd', [ 0, false ], 'IsCustomShapeStyleAllowed:qw:re', [ 0, false ], 'ItemSearchMode:qo:rf', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:qy:rg', [ 1, 10000 ], 'ItemSearchThreshold:qz:rh', [ 1, 10000 ], 'ShapeFilterResolution:qx:ri', [ 1, 2 ], 'ShapeMemberPath:q7:rj', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicShapeSeriesBase = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ShapeSeriesBase>this.ce.qe).r5 = this.ce.q7;\r\n\t}\r\n\tcf(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.ce.qe;\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.qt = null;\r\n\t\t\ta.qv = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qt = (<XamGeographicMap>this.ce.ce).tx;\r\n\t\ta.qv = (<XamGeographicMap>this.ce.ce).tz;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.qe).r5 = this.ce.q7;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.qe).rr = this.ce.qx;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected get_el(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.sz = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_rf(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected sz: TileSeriesView;\r\n\tget s3(): GeographicMapImagery {\r\n\t\treturn this.s1;\r\n\t}\r\n\tset s3(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.s3;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.s3;\r\n\t\t\tthis.s1 = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate s1: GeographicMapImagery = null;\r\n\tprivate s0: GeographicMapImagery = null;\r\n\tprotected get s2(): GeographicMapImagery {\r\n\t\treturn this.s0;\r\n\t}\r\n\tprotected set s2(a: GeographicMapImagery) {\r\n\t\tlet b = this.s0;\r\n\t\tthis.s0 = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.s0);\r\n\t}\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.s8));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.s8));\r\n\t\t\t}\r\n\t\t\tthis.sz.de(e, f);\r\n\t\t\tthis.mn(false);\r\n\t\t\tthis.lu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.s9));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.s9));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.sz.dd(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.ce) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.ce;\r\n\t\t\t\tthis.tb(this.b1);\r\n\t\t\t\tthis.sz.da(this.ce.ta);\r\n\t\t\t}\r\n\t\t\tthis.lu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.sz.da(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.sz.dh(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.s2 != null) {\r\n\t\t\t\tthis.s2.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.s2 != null) {\r\n\t\t\t\tthis.s2.be(this.b1.w);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.lw();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate s8(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.tb(this.b1);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate s9(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.s5) {\r\n\t\t\tthis.sz.df();\r\n\t\t}\r\n\t}\r\n\tprivate s4: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.s4 = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.s4 = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.mn(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.he != null) {\r\n\t\t\tthis.he.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected na(a: Rect, b: Rect): void {\r\n\t\tthis.sz.dg();\r\n\t\tsuper.na(a, b);\r\n\t}\r\n\tprivate s5: boolean = false;\r\n\tmo(a: boolean): void {\r\n\t\tsuper.mo(a);\r\n\t\tthis.ta(a, this.b1);\r\n\t}\r\n\tprotected ta(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.tb(b);\r\n\t\tif (this.s4 != null) {\r\n\t\t\tthis.s5 = true;\r\n\t\t\tthis.s4(a);\r\n\t\t\tthis.s5 = false;\r\n\t\t}\r\n\t\te.df();\r\n\t}\r\n\tmm(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.mm(a, b, c, d, e);\r\n\t\tlet f = this.fg.item(d);\r\n\t\tf.a1(c);\r\n\t\tif (this.cy(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.sj(f);\r\n\t}\r\n\tprivate tb(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.s3 != null && this.s3.ao != null) {\r\n\t\t\tif (this.s3 != this.s2) {\r\n\t\t\t\tthis.s2 = this.s3;\r\n\t\t\t}\r\n\t\t\tif (this.s2 != null && !b.isEmpty) {\r\n\t\t\t\tif (this.s2.width != b.width) {\r\n\t\t\t\t\tthis.s2.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.s2.height != b.height) {\r\n\t\t\t\t\tthis.s2.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tk2(a: boolean, b: SeriesView): void {\r\n\t\tsuper.k2(a, b);\r\n\t\t(<TileSeriesView>b).db();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.c7 = a;\r\n\t}\r\n\tprotected c7: TileSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.c7.pe = Defaults.ao;\r\n\t\t\tthis.c7.o9 = Defaults.an;\r\n\t\t}\r\n\t}\r\n\tprotected ch(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.di.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected c2(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.c3(a, b, true);\r\n\t}\r\n\tprotected c1(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected cl(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcj(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate di: GeometryGroup = new GeometryGroup();\r\n\tcr(): void {\r\n\t\tsuper.cr();\r\n\t\tthis.di.d.clear();\r\n\t}\r\n\tcq(): void {\r\n\t\tsuper.cq();\r\n\t\tthis.aq();\r\n\t}\r\n\tda(a: Rect): void {\r\n\t\tif (this.c7.s3 != null) {\r\n\t\t\tthis.c7.s3.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate c9: DomWrapper = null;\r\n\tprivate c8: RenderingContext = null;\r\n\tdd(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.c9 == null) {\r\n\t\t\tthis.c9 = this.e.he.createElement(\"canvas\");\r\n\t\t\tlet c = this.e.he.get2DCanvasContext(this.c9);\r\n\t\t\tthis.c8 = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tb.be(this.w);\r\n\t\t\t}\r\n\t\t\tb.bd(this.c8);\r\n\t\t\tb.bf(this.bu);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t}\r\n\tprivate dc(a: any, b: EventArgs): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tde(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdg(): void {\r\n\t\tif (this.c9 != null) {\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (this.c7.s3 != null) {\r\n\t\t\tthis.c7.s3.bf(this.bu);\r\n\t\t}\r\n\t}\r\n\tprotected a6(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.a6(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.c9 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.di.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.k.aa();\r\n\t\t\tthis.k.r(this.di);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.k.h();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.bu.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.bu.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.bu.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.bu.height));\r\n\t\tthis.k.o(this.c9.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.k.z();\r\n\t\t}\r\n\t}\r\n\tdf(): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tdb(): void {\r\n\t}\r\n\tdh(a: Rect): void {\r\n\t\tif (this.c7.s3 != null) {\r\n\t\t\tthis.c7.s3.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.l4);\r\n\t\te = this.ak(a.l3);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.l4;\r\n\t\te = a.l3;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_, isInfinity } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ui = SphericalMercatorVerticalScaler.am(XamGeographicMap.vu.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.vu.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bh = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.ce = true;\r\n\t\tthis.tx = a;\r\n\t\tthis.tx.nk = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bh = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.ce = true;\r\n\t\tthis.tz = b;\r\n\t\tthis.tz.nk = new SphericalMercatorVerticalScaler();\r\n\t\tthis.u4();\r\n\t\tthis.vb();\r\n\t\tthis.l4();\r\n\t}\r\n\tprivate um: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.tx.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.tz.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\tl4(): void {\r\n\t\tsuper.l4();\r\n\t\tthis.t9.fv(this.gd);\r\n\t}\r\n\ter(): boolean {\r\n\t\treturn this.uf;\r\n\t}\r\n\tes(): boolean {\r\n\t\treturn this.uf;\r\n\t}\r\n\tuf: boolean;\r\n\tstatic t7: MapResizeBehavior = 0;\r\n\tt8: MapResizeBehavior;\r\n\tub: boolean = false;\r\n\tuc: boolean;\r\n\tprotected t6(): MapBackgroundTilingMode {\r\n\t\tif (this.t4 == 0) {\r\n\t\t\tif (this.ub) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate t3: MapBackgroundTilingMode = 1;\r\n\tget t5(): MapBackgroundTilingMode {\r\n\t\treturn this.t3;\r\n\t}\r\n\tset t5(a: MapBackgroundTilingMode) {\r\n\t\tthis.t3 = a;\r\n\t}\r\n\tt4: MapBackgroundTilingMode;\r\n\tstatic vu: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\tui: number = 0;\r\n\tue: boolean;\r\n\tud: boolean;\r\n\twa: Rect;\r\n\tprivate vt: Rect = null;\r\n\tget vy(): Rect {\r\n\t\treturn this.vt;\r\n\t}\r\n\tset vy(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.vt, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.vt;\r\n\t\t\tthis.vt = a;\r\n\t\t\tthis.n9(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\tv2(): Rect {\r\n\t\treturn this.vy;\r\n\t}\r\n\tprivate u4(): void {\r\n\t\tif (this.wa.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.vy = this.v8(this.wa, this.cd == 1);\r\n\t}\r\n\tprivate v8(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.vu.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.vu.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.ui) {\r\n\t\t\tlet m = i / this.ui;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.vu.width;\r\n\t\t\te = m * XamGeographicMap.vu.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.vu.left) {\r\n\t\t\t\t\td += (XamGeographicMap.vu.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.vu.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.vu.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.ui) {\r\n\t\t\tlet o = this.ui * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.ui)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.ui));\r\n\t\t\t\t\tr -= ((r) - (k + this.ui));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.t0;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.t0 = a;\r\n\t\t\tthis.n9(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate t0: GeographicMapImagery = null;\r\n\tget tx(): NumericXAxis {\r\n\t\treturn this.tw;\r\n\t}\r\n\tset tx(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.tx;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.tx;\r\n\t\t\tthis.tw = a;\r\n\t\t\tthis.n9(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate tw: NumericXAxis = null;\r\n\tget tz(): NumericYAxis {\r\n\t\treturn this.ty;\r\n\t}\r\n\tset tz(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.tz;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.tz;\r\n\t\t\tthis.ty = a;\r\n\t\t\tthis.n9(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate ty: NumericYAxis = null;\r\n\tt2: GeographicMapImagery = null;\r\n\tprivate static vx: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\tve(a: Rect): void {\r\n\t\tthis.tq = a;\r\n\t}\r\n\tvd(a: Rect): void {\r\n\t\tthis.wa = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.v0(a, true, 0);\r\n\t}\r\n\tvz(a: Rect, b: number): Rect {\r\n\t\treturn this.v0(a, false, b);\r\n\t}\r\n\tprivate v0(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.v8(a, false);\r\n\t\t}\r\n\t\tlet e = this.tx;\r\n\t\tlet f = this.tz;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.vx, this.tp, e.cg);\r\n\t\tg.c = this.te;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.vx, this.tp, f.cg);\r\n\t\th.c = this.te;\r\n\t\tlet i = this.tx.ei(d.left, g);\r\n\t\tlet j = this.tx.ei(d.right, g);\r\n\t\tlet k = this.tz.ei(d.top, h);\r\n\t\tlet l = this.tz.ei(d.bottom, h);\r\n\t\tlet m = (i - c) / this.tp.width;\r\n\t\tlet n = (l - c) / this.tp.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.tp.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.tp.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.vx);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.vx;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.vx;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\tv4(a: Rect): Rect {\r\n\t\tlet b = this.tx;\r\n\t\tlet c = this.tz;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.tp, b.cg);\r\n\t\td.c = this.te;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.tp, c.cg);\r\n\t\te.c = this.te;\r\n\t\tlet f = this.td;\r\n\t\tlet g = b.el(f.left, d);\r\n\t\tlet h = c.el(f.top, e);\r\n\t\tlet i = b.el(f.right, d);\r\n\t\tlet j = c.el(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.cd == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.vu);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.vu;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\tvq(a: Point): Point {\r\n\t\tlet b = this.tx.l7(a.x);\r\n\t\tlet c = this.tz.l7(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tvr(a: Point): Point {\r\n\t\tlet b = this.tx.e3(a.x);\r\n\t\tlet c = this.tz.e3(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tvs(a: Point): Point {\r\n\t\treturn this.vr(a);\r\n\t}\r\n\tu1(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tu7(a: Brush): void {\r\n\t}\r\n\tfg(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tu9(): void {\r\n\t\tthis.t9.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.mx();\r\n\t\t}\r\n\t}\r\n\tprotected vp: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected vc(): void {\r\n\t\tif (this.t8 == 2) {\r\n\t\t\tif (!this.tp.isEmpty && this.tp.width > 0 && this.tp.height > 0) {\r\n\t\t\t\tlet a: number = this.tx.l7(this.tp.left + (this.tp.width / 2));\r\n\t\t\t\tlet b: number = this.tz.l7(this.tp.top + (this.tp.height / 2));\r\n\t\t\t\tthis.vp = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.tp.isEmpty && this.tp.width > 0 && this.tp.height > 0) {\r\n\t\t\t\tlet c: number = this.tx.l7(this.tp.left);\r\n\t\t\t\tlet d: number = this.tz.l7(this.tp.top);\r\n\t\t\t\tthis.vp = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected u8(): void {\r\n\t\tif (isNaN_(this.vp.x) || isNaN_(this.vp.y)) {\r\n\t\t\tthis.vc();\r\n\t\t}\r\n\t\tlet a: number = this.vp.x;\r\n\t\tlet b: number = this.vp.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.ta.left;\r\n\t\t\tlet d: number = this.ta.top;\r\n\t\t\tlet e: number = this.ta.width;\r\n\t\t\tlet f: number = this.ta.height;\r\n\t\t\tif (e > this.vw.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.vx, this.tp, this.tx.cg);\r\n\t\t\t\tg.c = this.te;\r\n\t\t\t\tlet h: number = this.tx.ei(a, g);\r\n\t\t\t\tif (this.t8 == 2) {\r\n\t\t\t\t\tlet i = h / this.tp.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.tp.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.vw.right) {\r\n\t\t\t\t\tc = this.vw.right - e;\r\n\t\t\t\t} else if (c < this.vw.left) {\r\n\t\t\t\t\tc = this.vw.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.vw.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.vx, this.tp, this.tz.cg);\r\n\t\t\t\tj.c = this.te;\r\n\t\t\t\tlet k: number = this.tz.ei(b, j);\r\n\t\t\t\tif (this.t8 == 2) {\r\n\t\t\t\t\tlet l = k / this.tp.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.tp.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.vw.bottom) {\r\n\t\t\t\t\td = this.vw.bottom - f;\r\n\t\t\t\t} else if (d < this.vw.top) {\r\n\t\t\t\t\td = this.vw.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.pi(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_ej(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected vw: Rect = null;\r\n\tprotected tb(): Rect {\r\n\t\tlet a: Rect = super.tb();\r\n\t\tif (this.tx == null || this.tz == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.tl();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.cd == 1) {\r\n\t\t\tif (this.tq.width > this.vw.width) {\r\n\t\t\t\tb = 0.5 - (this.tq.width / 2);\r\n\t\t\t} else if (b + a.width > this.vw.right) {\r\n\t\t\t\tb = this.vw.right - this.tq.width;\r\n\t\t\t} else if (b < this.vw.left) {\r\n\t\t\t\tb = this.vw.left;\r\n\t\t\t}\r\n\t\t\tif (this.tq.height > this.vw.height) {\r\n\t\t\t\tc = 0.5 - (this.tq.height / 2);\r\n\t\t\t} else if (c + this.tq.height > this.vw.bottom) {\r\n\t\t\t\tc = this.vw.bottom - this.tq.height;\r\n\t\t\t} else if (c < this.vw.top) {\r\n\t\t\t\tc = this.vw.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.ue && this.cd == 2 && this.ub) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.vw.right) > 0 && ((a.right - this.vw.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.vw.left - (a.width - (a.right - this.vw.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.vw.left && (Math.abs(a.left - this.vw.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.vw.right - (Math.abs(a.left - this.vw.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.ue) {\r\n\t\t\tlet f = this.vz(this.wa, 1);\r\n\t\t\tf = this.v1(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.d6 = true;\r\n\t\t\tthis.tq = e;\r\n\t\t\tthis.d6 = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tli(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.tl();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.tw.ei(-180, b);\r\n\t\t\t\tlet j = this.tw.ei(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.tw.ei(-180, b);\r\n\t\t\t\tlet l = this.tw.ei(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\ttl(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.vx, this.tp, this.tx.cg);\r\n\t\ta.c = this.te;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.vx, this.tp, this.tz.cg);\r\n\t\tb.c = this.te;\r\n\t\tlet c: number = this.tx.ei(XamGeographicMap.vu.left, a);\r\n\t\tlet d: number = this.tx.ei(XamGeographicMap.vu.right, a);\r\n\t\tlet e: number = this.tz.ei(XamGeographicMap.vu.top, b);\r\n\t\tlet f: number = this.tz.ei(XamGeographicMap.vu.bottom, b);\r\n\t\tthis.vw = new Rect(0, c / this.tp.width, f / this.tp.height, (d - c) / this.tp.width, (e - f) / this.tp.height);\r\n\t\treturn this.vw;\r\n\t}\r\n\tprivate v1(a: Rect): Rect {\r\n\t\tlet b: number = this.gh;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.d(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.d(a.height, b, 1);\r\n\t\tlet i: Rect = this.tp;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected tc(a: Rect): Rect {\r\n\t\tsuper.tc(this.tp);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tv3(a: Rect): Rect {\r\n\t\treturn this.tc(a);\r\n\t}\r\n\tprotected ct(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate u3(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bh = this;\r\n\t\t}\r\n\t}\r\n\tprotected nt(a: SeriesViewerView): void {\r\n\t\tsuper.nt(a);\r\n\t\tthis.t9 = <XamGeographicMapView>a;\r\n\t}\r\n\tn4(a: Rect, b: Rect): void {\r\n\t\tsuper.n4(a, b);\r\n\t\tthis.o5(this.tx);\r\n\t\tthis.o5(this.tz);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.u8();\r\n\t\t}\r\n\t\tif (this.ue) {\r\n\t\t\tthis.ta = this.tb();\r\n\t\t}\r\n\t\tthis.vf();\r\n\t}\r\n\tuk: number;\r\n\tprivate uh: number = 1;\r\n\tget uj(): number {\r\n\t\treturn this.uh;\r\n\t}\r\n\tset uj(a: number) {\r\n\t\tlet b = this.uh;\r\n\t\tthis.uh = a;\r\n\t\tthis.n9(\"ActualWindowScale\", b, this.uh);\r\n\t}\r\n\tgn(): number {\r\n\t\treturn this.uj;\r\n\t}\r\n\tgo(): number {\r\n\t\treturn this.uj;\r\n\t}\r\n\tprotected o4(): void {\r\n\t\tsuper.o4();\r\n\t\tlet a = Math.min(this.ta.width, this.ta.height);\r\n\t\tthis.uj = a;\r\n\t}\r\n\te8(): boolean {\r\n\t\treturn this.ub;\r\n\t}\r\n\tce(): ZoomCoercionMode {\r\n\t\tif (this.cf == 0) {\r\n\t\t\tif (this.uc) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.cf;\r\n\t}\r\n\tprotected n5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.n5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.u4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.vc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.t5 = this.t6();\r\n\t\t\tif (this.t2 != null) {\r\n\t\t\t\tthis.t2.isHorizontalWrappingEnabled = this.t5 == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.ub = this.uc;\r\n\t\t\tthis.t5 = this.t6();\r\n\t\t\tthis.cd = this.ce();\r\n\t\t\tif (this.t2 != null) {\r\n\t\t\t\tthis.t2.isHorizontalWrappingEnabled = this.t5 == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.ta = this.tb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.t2 != null) {\r\n\t\t\t\tlet e = this.t2;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.u5));\r\n\t\t\t\tthis.t2.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.t2 = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.t2 != null) {\r\n\t\t\t\tlet f = this.t2;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.u5));\r\n\t\t\t\tthis.t2.deferralHandler = this;\r\n\t\t\t\tthis.t2.isHorizontalWrappingEnabled = this.t5 == 2;\r\n\t\t\t}\r\n\t\t\tthis.t9.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.t2 != null) {\r\n\t\t\t\tthis.t2.geographicMap = this;\r\n\t\t\t\tthis.t9.fr(this.ta);\r\n\t\t\t\tthis.t9.fv(this.gd);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.va(<Axis>c);\r\n\t\t\tthis.u3(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.ud) {\r\n\t\t\t\tthis.tq = XamGeographicMap.vx;\r\n\t\t\t}\r\n\t\t\tthis.u4();\r\n\t\t\tthis.vb();\r\n\t\t\tthis.vc();\r\n\t\t\tthis.ta = this.tb();\r\n\t\t\tthis.t9.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.t9.fr(this.ta);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.mn(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.uj = this.uk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.ff) {\r\n\t\t\t\tthis.pg(this.gn(), this.go());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.t9.fv(this.gd);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRectMinWidth\":\r\n\r\n\t\t\tcase \"WindowRectMinHeight\":\r\n\t\t\tlet h = <number>d;\r\n\t\t\tif (isNaN_(h) || isInfinity(h)) {\r\n\t\t\t\tthis.gh = 5E-06;\r\n\t\t\t\tthis.gg = 5E-06;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gh = h;\r\n\t\t\t\tthis.gg = h;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.pc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let i of fromEnum<Series>(this.series)) {\r\n\t\t\t\ti.lp();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate u5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate va(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bh = null;\r\n\t\t}\r\n\t}\r\n\tprivate vb(): void {\r\n\t\tif (this.tx != null) {\r\n\t\t\tthis.tx.l4 = this.vy.left;\r\n\t\t\tthis.tx.l3 = this.vy.right;\r\n\t\t}\r\n\t\tif (this.tz != null) {\r\n\t\t\tthis.tz.l4 = this.vy.top;\r\n\t\t\tthis.tz.l3 = this.vy.bottom;\r\n\t\t}\r\n\t\tthis.tx.c1(true);\r\n\t\tthis.tz.c1(true);\r\n\t}\r\n\tt9: XamGeographicMapView;\r\n\tprivate ua: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.ua = this.t9.fo;\r\n\t\treturn this.ua;\r\n\t}\r\n\tsf(): Brush {\r\n\t\treturn this.t9.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.t9.fx;\r\n\t}\r\n\tprotected ox(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.qn = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.ox(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.on(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.o3(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.ls();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.um != null) {\r\n\t\t\tthis.um.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tu2(a: boolean): void {\r\n\t\tthis.pb(a);\r\n\t}\r\n\tun(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.tx.fv();\r\n\t\tlet c = this.tz.fv();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].hx();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.tp);\r\n\t\ta.centralArea = RectData.b(this.tp);\r\n\t\ta.plotArea = RectData.b(this.tp);\r\n\t\treturn a;\r\n\t}\r\n\tth(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\tu6(): void {\r\n\t}\r\n\tprivate vv: Rect = Rect.empty;\r\n\tprotected get v9(): Rect {\r\n\t\treturn this.vv;\r\n\t}\r\n\tprotected set v9(a: Rect) {\r\n\t\tthis.vv = a;\r\n\t}\r\n\tvg(a: Rect): void {\r\n\t\tthis.v9 = a;\r\n\t\tthis.vf();\r\n\t}\r\n\tprivate vf(): void {\r\n\t\tif (this.ug && !this.v9.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.v9);\r\n\t\t\tthis.v9 = Rect.empty;\r\n\t\t\tthis.pi(a, false);\r\n\t\t}\r\n\t}\r\n\tget ug(): boolean {\r\n\t\treturn !this.tp.isEmpty && !this.te.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'n9', [ 'BackgroundTilingMode:t4:vh', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:uc:vi', [ 0, false ], 'ResizeBehavior:t8:vj', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.t7) ], 'SuppressZoomResetOnWorldRectChange:ud:vk', [ 0, false ], 'UseWorldRectForZoomBounds:ue:vl', [ 0, false ], 'WindowScale:uk:vm', [ 1, NaN ], 'WorldRect:wa:vn', [ (<any>Rect).$, XamGeographicMap.vu ], 'Zoomable:uf:vo', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.v3(b);\r\n\t\tlet d: Rect = XamGeographicMap.vu;\r\n\t\tlet e: Rect = this.geographicMap.vy;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.tx;\r\n\t\tlet i: NumericYAxis = this.geographicMap.tz;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.cg);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.cg);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.ei(d.left, j);\r\n\t\tlet m: number = i.ei(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprotected ce: GeographicXYTriangulatingSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.qe;\r\n\t\ta.re = this.ce.qq;\r\n\t\ta.rm = this.ce.qo;\r\n\t\ta.trianglesSource = this.ce.qn;\r\n\t\ta.q2 = this.ce.qt;\r\n\t\ta.q4 = this.ce.qv;\r\n\t\ta.q6 = this.ce.qx;\r\n\t}\r\n\tch(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.qe;\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.qc = null;\r\n\t\t\ta.qd = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qc = (<XamGeographicMap>this.ce.ce).tx;\r\n\t\ta.qd = (<XamGeographicMap>this.ce.ce).tz;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).re = this.ce.qq;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).rm = this.ce.qo;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).trianglesSource = this.ce.qn;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).q2 = this.ce.qt;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).q4 = this.ce.qv;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).q6 = this.ce.qx;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicScatterAreaSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.q8 != null) {\r\n\t\t\tthis.cm.q8.sl = this.cm.rc;\r\n\t\t\tthis.cm.q8.r9 = this.cm.q7;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.q8 != null) {\r\n\t\t\tthis.cm.q8.sl = this.cm.rc;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.q8 != null) {\r\n\t\t\tthis.cm.q8.r9 = this.cm.q7;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.sa = 2;\r\n\t\tthis.fn.hm = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bv(a);\r\n\t\tthis.fn.u2(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a7(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.t2 != null) {\r\n\t\t\tthis.fn.t2.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.t2 != null) {\r\n\t\t\tthis.fn.t2.windowRect = this.fn.ta;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.e.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.e.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.gd;\r\n\t\tif (b != 1) {\r\n\t\t\ta.aa();\r\n\t\t\ta.ab(b, b);\r\n\t\t}\r\n\t\ta.l(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ad = Defaults.j;\r\n\t\tthis.fe.ad = Defaults.j;\r\n\t\tthis.fd._stroke = Defaults.ae;\r\n\t\tthis.fe._stroke = Defaults.ae;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.qm = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\tqm: GeographicXYTriangulatingSeriesView;\r\n\tqq: string;\r\n\tqo: string;\r\n\tqn: IEnumerable;\r\n\tqt: string;\r\n\tqv: string;\r\n\tqx: string;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qm.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.qm.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.qm.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.qm.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.qm.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.qm.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.qm.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:qo:qz', [ 2, \"pointY\" ], 'LongitudeMemberPath:qq:q0', [ 2, \"pointX\" ], 'TrianglesSource:qn:q1', [ IEnumerable_$type, null ], 'TriangleVertexMemberPath1:qt:q2', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:qv:q3', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:qx:q4', [ 2, \"v3\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_df(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\trc: string;\r\n\tprivate q5: ColorScale = null;\r\n\tget q7(): ColorScale {\r\n\t\treturn this.q5;\r\n\t}\r\n\tset q7(a: ColorScale) {\r\n\t\tlet b: boolean = this.q5 != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.q5;\r\n\t\t\tif (this.q5 != null) {\r\n\t\t\t\tlet d = this.q5;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.rf));\r\n\t\t\t}\r\n\t\t\tthis.q5 = a;\r\n\t\t\tif (this.q5 != null) {\r\n\t\t\t\tlet e = this.q5;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.rf));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.q5);\r\n\t\t\tif (this.q8 != null) {\r\n\t\t\t\tthis.q8.r9 = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate rf(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.ra.co();\r\n\t\tthis.rh();\r\n\t\tthis.mn(false);\r\n\t}\r\n\trh(): void {\r\n\t\tif (this.q8 != null) {\r\n\t\t\tthis.q6 = this.q8.r8;\r\n\t\t}\r\n\t}\r\n\tq6: ColorScale;\r\n\tprotected m1(): void {\r\n\t\tsuper.m1();\r\n\t\tthis.rh();\r\n\t}\r\n\tq8: ScatterAreaSeries;\r\n\tprotected qd(): Series {\r\n\t\tthis.q8 = new ScatterAreaSeries();\r\n\t\tlet a = this.q8;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.rg));\r\n\t\treturn this.q8;\r\n\t}\r\n\tprivate rg(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.ra = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\tra: GeographicScatterAreaSeriesView;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.ra.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.ra.co();\r\n\t\t\tthis.rh();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_e7(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e7(a: boolean): void {\r\n\t\tsuper.set_e7(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:q6:ri', [ (<any>ColorScale).$, null ], 'ColorMemberPath:rc:rj', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicContourLineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cm.g4 = Defaults.m;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.qe != null) {\r\n\t\t\tthis.cm.q6.r9 = this.cm.q9;\r\n\t\t\tthis.cm.q6.sj = this.cm.rd;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.q6 != null) {\r\n\t\t\tthis.cm.q6.r9 = this.cm.q9;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.q6 != null) {\r\n\t\t\tthis.cm.q6.sj = this.cm.rd;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_d3(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected qj(): void {\r\n\t\tsuper.qj();\r\n\t}\r\n\tq6: ScatterContourSeries;\r\n\tprotected qd(): Series {\r\n\t\tthis.q6 = new ScatterContourSeries();\r\n\t\tlet a = this.q6;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.rg));\r\n\t\tlet b = this.q6;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.rh));\r\n\t\treturn this.q6;\r\n\t}\r\n\tprivate rg(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate rh(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.qe);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.q8 = c.r8;\r\n\t\t}\r\n\t}\r\n\trd: string;\r\n\tq9: ValueBrushScale;\r\n\tq8: ValueBrushScale;\r\n\tprotected m1(): void {\r\n\t\tsuper.m1();\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.ra = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\tra: GeographicContourLineSeriesView;\r\n\tq5: ContourValueResolver;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.ra.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.ra.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.q6.r6 = this.q5;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.q6.pi = this.pi;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.q6.pj = this.pj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.q6.gw = this.gw;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LineJoin\":\r\n\t\t\tthis.q6.pl = this.pl;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:q8:ri', [ (<any>ValueBrushScale).$, null ], 'FillScale:q9:rj', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:rd:rk', [ 2, \"value\" ], 'ValueResolver:q5:rl', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.d3 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.rd as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.rd = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.q9;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q9 = null : this.i.q9 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.q8;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q8 = null : this.i.q8 = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        const r = this.i.q5;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q5 = null : this.i.q5 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicHighDensityScatterSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.qe);\r\n\t\ta.sm = this.ce.q3;\r\n\t\ta.su = this.ce.q1;\r\n\t\ta.qz = this.ce.qq;\r\n\t\ta.qy = this.ce.qp;\r\n\t\ta.eo = this.ce.qo;\r\n\t\ta.ru = this.ce.qs;\r\n\t\ta.rt = this.ce.qr;\r\n\t\ta.ts = this.ce.rm;\r\n\t\ta.tr = this.ce.rl;\r\n\t\ta.r6 = this.ce.qv;\r\n\t}\r\n\tck(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).sm = this.ce.q3;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).su = this.ce.q1;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).qz = this.ce.qq;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).qy = this.ce.qp;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).eo = this.ce.qo;\r\n\t}\r\n\tci(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).ru = this.ce.qs;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).rt = this.ce.qr;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.qe);\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.qj = null;\r\n\t\t\ta.ql = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qj = (<XamGeographicMap>this.ce.ce).tx;\r\n\t\ta.ql = (<XamGeographicMap>this.ce.ce).tz;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).qj = (<XamGeographicMap>this.ce.ce).tx;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).ql = (<XamGeographicMap>this.ce.ce).tz;\r\n\t}\r\n\tch(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).ts = this.ce.rm;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).tr = this.ce.rl;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).r6 = this.ce.qv;\r\n\t}\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ce.rm = Defaults.aq;\r\n\t\t\tthis.ce.rl = Defaults.ap;\r\n\t\t\tthis.ce.o9 = Defaults.al;\r\n\t\t\tthis.ce.pe = Defaults.ak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected gz(): number {\r\n\t\tif (!isNaN_(this.gy)) {\r\n\t\t\treturn super.gz();\r\n\t\t}\r\n\t\treturn Defaults.q;\r\n\t}\r\n\tprotected get_d8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.qn = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\tqn: GeographicHighDensityScatterSeriesView;\r\n\tprotected qd(): Series {\r\n\t\tthis.qm = new HighDensityScatterSeries();\r\n\t\treturn this.qm;\r\n\t}\r\n\tprivate qm: HighDensityScatterSeries = null;\r\n\tq1: string;\r\n\tq3: string;\r\n\tqq: boolean;\r\n\tqp: boolean;\r\n\tqo: boolean;\r\n\tqs: number;\r\n\tqr: number;\r\n\trm: Color;\r\n\trl: Color;\r\n\tqv: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate qu: number = 0;\r\n\tget qw(): number {\r\n\t\treturn this.qu;\r\n\t}\r\n\tset qw(a: number) {\r\n\t\tlet b = this.qu;\r\n\t\tthis.qu = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.qu);\r\n\t}\r\n\tprotected qj(): void {\r\n\t\tsuper.qj();\r\n\t\tlet a = (<HighDensityScatterSeries>this.qe);\r\n\t\ta.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.ra));\r\n\t\tlet b = (<HighDensityScatterSeries>this.qe);\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.q9));\r\n\t}\r\n\tprivate ra(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.qw = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q9(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.qm == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qn.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.qn.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.qn.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.qn.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.qn.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.qn.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.qn.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.qn.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.qn.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.qn.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.qn.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.qn.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.qn.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_e7(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e7(a: boolean): void {\r\n\t\tsuper.set_e7(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:rl:rb', [ (<any>Color).$, Defaults.ap ], 'HeatMaximum:qr:rc', [ 1, 50 ], 'HeatMinimumColor:rm:rd', [ (<any>Color).$, Defaults.aq ], 'HeatMinimum:qs:re', [ 1, 0 ], 'LatitudeMemberPath:q1:rf', [ 2, null ], 'LongitudeMemberPath:q3:rg', [ 2, null ], 'MouseOverEnabled:qo:rh', [ 0, false ], 'PointExtent:qv:ri', [ 1, 1 ], 'ProgressiveLoad:qp:rj', [ 0, true ], 'UseBruteForce:qq:rk', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.d8 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.q1 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.q1 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.q3 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.q3 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.qq as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.qq = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.qq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.qp as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.qp = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.qp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.qo as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.qo = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.qo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.qs as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.qs = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.qs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.qr as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.qr = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.qr);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.rm);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.rm = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.rm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.rl);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.rl = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.rl));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.qv as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.qv = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.qv);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.qw as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.qw = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.qw);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.uf as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.uf = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.uf);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.t8;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.t8 = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.t8));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.uc as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.uc = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.uc);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.t4;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.t4 = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.t4));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.ue as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.ue = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.ue);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.ud as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.ud = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.ud);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.wa);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.wa = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.wa));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.vy);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.vy = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.vy));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        const r = this.i.tx;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.tx = null : this.i.tx = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        const r = this.i.tz;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.tz = null : this.i.tz = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.ej as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.uk as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.uk = +v;\r\n\t                                        this._a(\"windowScale\", this.i.uk);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.uj as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.uj = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.uj);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.ug as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.v2();\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.ve(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.vd(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.vz(toRect(geographic), extraPixelPadding);\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.v4(toRect(windowRect));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.vq(toPoint(pixelCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.vr(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.vs(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.u1();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.u9();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t                        \r\n\t\tlet iv = this.i.gn();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t                        \r\n\t\tlet iv = this.i.go();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t                        \r\n\t\tlet iv = this.i.un();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.vg(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcGeographicMapImagery {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        const r = this.i.geographicMap;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.dy as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.qg as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.qg = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.qg);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.lp();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t                        \r\n\t\tlet iv = this.i.h1(item, memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t                        \r\n\t\tlet iv = this.i.hy(toPoint(world));\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.ho(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.hm(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gn(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.ps(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.p3(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.p5(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.po(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gl(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.pq(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.pt(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.go(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t                        \r\n\t\tlet iv = this.i.ge();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.mn(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.mx();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.qo;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.qo = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.qo));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.qp as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.qp = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.qp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.qn;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.qn = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.qn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.qm;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.qm = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.qm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.q4 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.q4 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.ri);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.ri = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.ri));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.rj);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.rj = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.rj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.qq as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.qq = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.qq);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.q3 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.q3 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.rg);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.rg = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.rg));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.rh);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.rh = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.rh));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t}\r\n\tprotected ci: GeographicPolylineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.g4 = Defaults.n;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolylineSeries>this.ci.qe).s0 = this.ci.rk;\r\n\t\t(<ScatterPolylineSeries>this.ci.qe).s5 = this.ci.rs;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.qe).s0 = this.ci.rk;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.qe).s5 = this.ci.rs;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_eb(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.rl = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\trl: GeographicPolylineSeriesView;\r\n\trk: StyleSelector;\r\n\trs: Style;\r\n\tprotected qd(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.rp));\r\n\t\treturn a;\r\n\t}\r\n\tprivate rp(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.rl.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.rl.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:rs:rq', [ (<any>Style).$, null ], 'ShapeStyleSelector:rk:rr', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.eb as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.rs ? (this.i.rs.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.rs.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.rs ? (this.i.rs.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.rs.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.rs ? (this.i.rs.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.rs.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.rs.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.rs ? (this.i.rs.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.rs.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.rs.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.rs) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.rs = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicProportionalSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <BubbleSeries>this.ce.qe;\r\n\t\ta.tr = this.ce.sd;\r\n\t\ta.tz = this.ce.sb;\r\n\t\ta.ql = this.ce.qo;\r\n\t\ta.q7 = this.ce.q4;\r\n\t\ta.qq = this.ce.qp;\r\n\t\ta.vv = this.ce.rx;\r\n\t\ta.wl = this.ce.si;\r\n\t\ta.vl = this.ce.rp;\r\n\t\ta.wb = this.ce.r9;\r\n\t\ta.v6 = this.ce.r1;\r\n\t\ta.vi = this.ce.rm;\r\n\t\ta.vt = this.ce.rt;\r\n\t\ta.vu = this.ce.rw;\r\n\t\ta.v0 = this.ce.rz;\r\n\t\ta.vz = this.ce.ry;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).tr = this.ce.sd;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).tz = this.ce.sb;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).ql = this.ce.qo;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).q7 = this.ce.q4;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).qq = this.ce.qp;\r\n\t}\r\n\tct(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).tb = this.ce.qq;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).xAxis = (<XamGeographicMap>this.ce.ce).tx;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).yAxis = (<XamGeographicMap>this.ce.ce).tz;\r\n\t}\r\n\tcu(): void {\r\n\t\tlet a = <BubbleSeries>this.ce.qe;\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.ce).tx;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.ce).tz;\r\n\t}\r\n\tco(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).rn = this.ce.ri;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).ro = this.ce.rj;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).wl = this.ce.si;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vl = this.ce.rp;\r\n\t\t(<BubbleSeries>this.ce.qe).vv = this.ce.rx;\r\n\t}\r\n\tci(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).wb = this.ce.r9;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vi = this.ce.rm;\r\n\t\t(<BubbleSeries>this.ce.qe).vt = this.ce.rt;\r\n\t\t(<BubbleSeries>this.ce.qe).vu = this.ce.rw;\r\n\t\t(<BubbleSeries>this.ce.qe).v0 = this.ce.rz;\r\n\t\t(<BubbleSeries>this.ce.qe).vz = this.ce.ry;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).v6 = this.ce.r1;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vv = this.ce.rx;\r\n\t}\r\n\tch(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vt = this.ce.rt;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vu = this.ce.rw;\r\n\t}\r\n\tck(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).v0 = this.ce.rz;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vz = this.ce.ry;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.rq = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\trq: GeographicProportionalSymbolSeriesView;\r\n\tprotected g0(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected qd(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate rn: BubbleSeries = null;\r\n\tsb: string;\r\n\tsd: string;\r\n\tsi: string;\r\n\trp: SizeScale;\r\n\tr9: string;\r\n\tr1: string;\r\n\trm: BrushScale;\r\n\trt: boolean;\r\n\trw: boolean;\r\n\trz: number;\r\n\try: number;\r\n\trx: boolean;\r\n\trv: boolean;\r\n\tru: boolean;\r\n\tprotected rs: boolean = false;\r\n\tprotected rr: boolean = false;\r\n\tprotected get_d0(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tro: ScatterItemSearchMode;\r\n\tr0: number;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.rq.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.rq.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.rq.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.rq.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.rq.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.rq.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.rq.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.rq.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.rq.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.rq.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.rq.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.rq.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.rq.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.rq.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.rq.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.qe).st = this.rv;\r\n\t\t\tthis.rs = this.rv;\r\n\t\t\tif (this.rv) {\r\n\t\t\t\tlet e = (<ScatterBase>this.qe);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.sn));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.qe);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.sn));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qe).ss = this.ru;\r\n\t\t\tthis.rr = this.ru;\r\n\t\t\tif (this.rv) {\r\n\t\t\t\tlet g = (<ScatterBase>this.qe);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.sm));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.qe);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.sm));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.qe).sh = this.ro;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.qe).ta = this.r0;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate sn(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate sm(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:r1:so', [ 2 ], 'FillScale:rm:sp', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:rt:sq', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:ru:sr', [ 0, false ], 'IsCustomScatterStyleAllowed:rv:ss', [ 0, false ], 'ItemSearchMode:ro:st', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:r0:su', [ 1, 10000 ], 'LabelMemberPath:r9:sv', [ 2 ], 'LatitudeMemberPath:sb:sw', [ 2, null ], 'LongitudeMemberPath:sd:sx', [ 2, null ], 'MarkerBrushBrightness:ry:sy', [ 1, NaN ], 'MarkerOutlineBrightness:rz:sz', [ 1, NaN ], 'MarkerOutlineUsesFillScale:rw:s0', [ 0, false ], 'RadiusMemberPath:si:s1', [ 2, null ], 'RadiusScale:rp:s2', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:rx:s3', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c5 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.sb as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.sb = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.sd as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.sd = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.si as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.si = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        const r = this.i.rp;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.rp = null : this.i.rp = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.r9 as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.r9 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.r1 as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.r1 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        const r = this.i.rm;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.rm = null : this.i.rm = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rt as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rt = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.rt);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.rw as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.rw = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.rw);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.rz as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.rz = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.rz);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.ry as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.ry = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.ry);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rx as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rx = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.rx);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.rv as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.rv = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.rv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.ru as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.ru = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.ru);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.ro;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.ro = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.ro));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.r0 as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.r0 = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.r0);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.df as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.rc as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.rc = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.q7;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q7 = null : this.i.q7 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.q6;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q6 = null : this.i.q6 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.rh();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.q7 as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.q7 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.qw as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.qw = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.qw);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.qv as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.qv = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.qv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.qo;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.qo = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.qo));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.qz as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.qz = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.qz);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.qy as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.qy = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.qy);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        const r = this.i.qr;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.qr = null : this.i.qr = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.qx as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.qx = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.qx);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);;\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.q7 = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected ci: GeographicShapeSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.sr = Defaults.aj;\r\n\t\t\tthis.ci.g4 = Defaults.p;\r\n\t\t\tthis.ci.rq = Defaults.o;\r\n\t\t\tthis.ci.rn = Defaults.d;\r\n\t\t\tthis.ci.rl = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).ul = this.ci.st;\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).te = this.ci.ro;\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).t0 = this.ci.r9;\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).th = this.ci.rq;\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).s0 = this.ci.rk;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).t0 = this.ci.r9;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).th = this.ci.rq;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).s0 = this.ci.rk;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).s9 = this.ci.rn;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).uh = this.ci.sq;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).ui = this.ci.sr;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).uk = this.ci.ss;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).te = this.ci.ro;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).ul = this.ci.st;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_ea(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\trp: GeographicShapeSeriesView;\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.rp = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected qd(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.r6));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.r7));\r\n\t\treturn a;\r\n\t}\r\n\tprivate r6(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate r7(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.qe);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tro: StyleSelector;\r\n\tst: Style;\r\n\trn: MarkerType;\r\n\trm: MarkerOutlineMode;\r\n\trl: MarkerFillMode;\r\n\tr9: DataTemplate;\r\n\tsq: Brush;\r\n\tsr: Brush;\r\n\tss: Style;\r\n\trq: number;\r\n\tf6(): number {\r\n\t\treturn this.rq;\r\n\t}\r\n\tpc(): Brush {\r\n\t\treturn this.so;\r\n\t}\r\n\tpd(): Brush {\r\n\t\treturn this.sp;\r\n\t}\r\n\tnj(): DataTemplate {\r\n\t\treturn this.r8;\r\n\t}\r\n\ti2(): string {\r\n\t\tlet a = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.qe);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.i2();\r\n\t}\r\n\trk: CollisionAvoidanceType;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.qe).s7 = this.rm;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.qe).s3 = this.rl;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.rp.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.rp.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.rp.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.rp.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.rp.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.rp.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.rp.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.rp.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.rp.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected g0(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tr8: DataTemplate;\r\n\tso: Brush;\r\n\tsp: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:so:sa', [ (<any>Brush).$ ], 'ActualMarkerOutline:sp:sb', [ (<any>Brush).$ ], 'ActualMarkerTemplate:r8:sc', [ (<any>DataTemplate).$, null ], 'MarkerBrush:sq:sd', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:rk:se', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:rl:sf', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:rm:sg', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:sr:sh', [ (<any>Brush).$ ], 'MarkerStyle:ss:si', [ (<any>Style).$ ], 'MarkerTemplate:r9:sj', [ (<any>DataTemplate).$, null ], 'MarkerThickness:rq:sk', [ 1, DeviceUtils.g(2) ], 'MarkerType:rn:sl', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:st:sm', [ (<any>Style).$, null ], 'ShapeStyleSelector:ro:sn', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.ea as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.st ? (this.i.st.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.st.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.st ? (this.i.st.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.st.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.st ? (this.i.st.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.st.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.st.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.st ? (this.i.st.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.st.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.st.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.st) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.st = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.rn;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.rn = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.rn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.rm;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.rm = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.rm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.rl;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.rl = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.rl));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.r9 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.r9 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.sq);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.sq = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.sq));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.sr);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.sr = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.sr));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.rq as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.rq = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.rq);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.rk;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.rk = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.rk));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.r8 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.r8 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.so);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.so = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.so));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.sp);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.sp = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.sp));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.qe;\r\n\t\tsuper.b2();\r\n\t\ta.tr = this.ce.r2;\r\n\t\ta.tz = this.ce.r0;\r\n\t\ta.ql = this.ce.qo;\r\n\t\ta.q7 = this.ce.q4;\r\n\t\ta.qq = this.ce.qp;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).tr = this.ce.r2;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).tz = this.ce.r0;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).ql = this.ce.qo;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).q7 = this.ce.q4;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).qq = this.ce.qp;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).tb = this.ce.qq;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).xAxis = (<XamGeographicMap>this.ce.ce).tx;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).yAxis = (<XamGeographicMap>this.ce.ce).tz;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.qe;\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.ce).tx;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.ce).tz;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).rx = this.ce.rm;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).rn = this.ce.ri;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).ro = this.ce.rj;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.rp = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\trp: GeographicSymbolSeriesView;\r\n\tprotected g0(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected qd(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate ro: ScatterSeries = null;\r\n\tr0: string;\r\n\tr2: string;\r\n\trm: CollisionAvoidanceType;\r\n\trt: boolean;\r\n\trs: boolean;\r\n\tprotected rr: boolean = false;\r\n\tprotected rq: boolean = false;\r\n\tprotected get_d0(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\trn: ScatterItemSearchMode;\r\n\trv: number;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.rp.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.rp.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.rp.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.rp.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.rp.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.rp.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.qe).st = this.rt;\r\n\t\t\tthis.rr = this.rt;\r\n\t\t\tif (this.rt) {\r\n\t\t\t\tlet e = (<ScatterBase>this.qe);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.r7));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.qe);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.r7));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.qe).ss = this.rs;\r\n\t\t\tthis.rq = this.rs;\r\n\t\t\tif (this.rt) {\r\n\t\t\t\tlet g = (<ScatterBase>this.qe);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.r6));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.qe);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.r6));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.qe).sh = this.rn;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qe).ta = this.rv;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate r7(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate r6(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tru: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:rs:r8', [ 0, false ], 'IsCustomScatterStyleAllowed:rt:r9', [ 0, false ], 'ItemSearchMode:rn:sa', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:rv:sb', [ 1, 10000 ], 'LatitudeMemberPath:r0:sc', [ 2, null ], 'LongitudeMemberPath:r2:sd', [ 2, null ], 'MarkerCollisionAvoidance:rm:se', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:ru:sf', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c5 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.r0 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.r0 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.r2 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.r2 = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.rm;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.rm = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.rm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.rt as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.rt = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.rt);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.rs as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.rs = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.rs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.rn;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.rn = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.rn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.rv as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.rv = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.rv);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_el(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget rm(): GeographicMapImagery {\r\n\t\treturn this.rl;\r\n\t}\r\n\tset rm(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.rm;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.rm;\r\n\t\t\tthis.rl = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate rl: GeographicMapImagery = null;\r\n\trq(): void {\r\n\t\tif (this.rm != null) {\r\n\t\t\tthis.rm.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.qe != null) {\r\n\t\t\t\t(<TileSeries>this.qe).s3 = this.rm;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate rk: TileSeries = null;\r\n\tprotected qj(): void {\r\n\t\tsuper.qj();\r\n\t\t(<TileSeries>this.qe).s3 = this.rm;\r\n\t\tif (this.rk != null) {\r\n\t\t\tlet a = this.rk;\r\n\t\t\ta.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.rp));\r\n\t\t}\r\n\t\tthis.rk = <TileSeries>this.qe;\r\n\t\tif (this.rk != null) {\r\n\t\t\tlet b = this.rk;\r\n\t\t\tb.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.rp));\r\n\t\t}\r\n\t}\r\n\tprotected qd(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate rp(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.el as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.rm;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.rm = null : this.i.rm = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.rq();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.qq as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.qq = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.qo as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.qo = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.qn as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.qn = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.qt as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.qt = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.qv as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.qv = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.qx as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.qx = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.el as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.s3;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.s3 = null : this.i.s3 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n"],"names":["GeographicMapSeriesHost","lp","super","this","qe","constructor","qc","qd","get_dy","h1","a","b","c","jv","c2","d","ag","bf","qj","get_hasMarkers","hasMarkers","hostedSeries_","externalObject","createFromInternal","Prefix","Postfix","_implementation","k7","qf","b2","ax","az","ay","a0","hy","h3","ho","hm","gn","ps","p3","ak","p4","al","p5","p6","gj","po","gl","pq","pt","go","pp","gk","pr","gm","hj","ge","ga","hz","by","HostSeriesView","l4","$","qg","ql","h","l9","ce","oq","ll","mc","p7","index","ld","ht","e","S","actualWindowRectChanged","qk","f","qi","b9","b3","ca","cd","b7","hs_","v_","_visibility","visibility","eo","expectFunctions","cc","b1","bz","gv","b6","f3","b0","b8","cb","title","b4","b5","legend","at","ta","width","v2_","mn","mm","au","mx","get_coercionMethods","_coercionMethods","set_coercionMethods","coercionMethods","lc","hx","k4","$t","i","raisePropertyChanged","oldValue","newValue","bx","ar","qb","itemsSource","o9","pe","bu","gy","hr","_opacity","g4","ev","legendItemBadgeShape","ba","o5","o8","GeographicMarkerSeries","propertyUpdated","q2","nj","q3","pc","rg","pd","rh","f6","qp","i2","propertyName","q5","rm","rl","$$p","rn","ri","ro","rj","qn","qm","qo","q7","q4","qq","tb","B","g","GeographicShapeSeriesBase","qu","qt","assigningShapeStyle","assigningShapeMarkerStyle","qs","GeographicShapeSeriesBaseView","get_d0","get_c3","cf","ch","cg","rd","qw","ra","rc","qv","q9","qz","ru","qy","rv","importCompleted","rb","j","count","ext_","qr","getPointData","get_e7","set_e7","r5","tx","tz","rr","qx","ImageTilesReadyEventArgs","ImagesChangedEventArgs","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","MapResizeBehavior","MapResizeBehavior_$type","TileSeries","ShapeSeriesBase","get_el","s1","s0","imageTilesReady","s4","s5","ab","TileSeriesView","sz","get_rf","s3","s2","propertyChanged","s8","de","lu","s9","deferralHandler","dd","type","XamGeographicMap","geographicMap","da","dh","be","w","lw","df","register","unRegister","deferredRefresh","deferAction","he","setTimeout","window","na","dg","mo","getViewInfo","p0","p1","fg","item","a1","cy","sj","ao","isEmpty","height","k2","db","IMapRenderDeferralHandler","ShapeSeriesViewBase","c7","di","GeometryGroup","c9","c8","as","q","Defaults","an","add","c3","c1","cl","cj","cr","clear","cq","aq","windowRect","createElement","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","toString","bd","imagesChanged","dc","a6","k","aa","r","clip","Math","round","left","top","o","getNativeElement","z","SphericalMercatorVerticalScaler","VerticalLinearScaler","getMercatorUnscaledValue","p","getMercatorScaledValue1","af","values_","Array","isArray","v","x","y","m","n","s","t","u","ac","ah","sin","log","ai","aj","l3","am","Rect","getMercatorScaledValue3","getMercatorScaledValue2","static","exp","asin","SphericalMercatorHorizontalScaler","HorizontalLinearScaler","l","SeriesViewer","um","ub","t3","ui","vt","t0","tw","ty","t2","vp","$type","NaN","vw","uh","ua","vv","empty","vu","bottom","backgroundContent","OpenStreetMapImagery","$ret","NumericXAxis","bh","nk","NumericYAxis","u4","vb","provideContainer","provideRenderer","t9","fv","gd","er","uf","es","t6","t4","t5","vy","l_op_Inequality","n9","v2","wa","v8","right","getZoomRectFromGeoRect","getZoomFromGeographicRect","ve","tq","vd","v0","vz","ScalerParams","vx","tp","te","ei","intersect","getZoomFromGeographicPoints","v4","td","el","vq","l7","vr","e3","vs","u1","GeographicMapImagery","clearTileCache","u7","u9","ee","series","vc","t8","u8","pi","get_ej","tl","ue","floor","ceil","abs","v1","d6","li","Tuple$2","gh","MathUtil","tc","v3","ct","XamGeographicMapView","u3","nt","n4","vf","uj","o4","min","e8","uc","n5","isHorizontalWrappingEnabled","u5","fu","fr","va","ud","fs","uk","ff","pg","gg","getFontInfo","fo","sf","fw","getFontBrush","fx","ox","ItfConverter","triangulationSource","points","triangles","on","o3","ls","u2","pb","un","ChartVisualData","axes","add1","_inner","name","contentArea","RectData","centralArea","plotArea","th","u6","v9","vg","ug","t7","DependencyProperty","PropertyMetadata","Control","ap","cancellingImage","downloadingImage","bb","GeographicMapImageryView","a5","a9","a4","a3","a2","referer","bj","userAgent","av","bg","geographicMapProperty","a7","bs","bn","cm","bc","a8","XamMultiScaleImage","Size","GeographicXYTriangulatingSeriesView","re","trianglesSource","q6","ci","ck","GeographicScatterAreaSeriesView","q8","sl","r9","cn","co","SeriesViewerView","fn","fz","fp","sa","bk","bv","get_ap","d4","p2","BrushCollection","du","ae","dv","fy","remove","ft","d1","fd","ad","fe","_stroke","fq","OpenStreetMapTileSource","tilePath","tilePathProperty","bq","setTilePathUrl","br","GeographicXYTriangulatingSeries","GeographicScatterAreaSeries","get_df","triangulationStatusChanged","rf","r8","m1","ScatterAreaSeries","ColorScale","BingMapsImageryStyle","IgcSubDomainsCollection","IgCollection","list","length","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","SubDomainsCollection","ObservableCollection$1","_rest","specialize","BingMapsMapImageryView","subDomains","actualTilePath","actualSubDomains","cultureName","BingMapsMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","getResponseCompleted","bind","bp","actualBingImageryRestUri","isInitialized","bingImageryRestUri","requestMapSettings","bw","isDeferredLoad","cp","string","apiKey","Uri","isWellFormedUriString","imageryStyle","url_","submit","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","collectionChanged","IgcBingMapsMapImagery","createImplementation","_subDomains","_actualSubDomains","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","IgcBingMapsMapImageryModule","registerCons","IgcCustomMapImagery","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","outerArgs","_provideImplementation","beforeGetTileImageUri","CustomMapImagery","IgcCustomMapImageryModule","GeographicContourLineSeriesView","GeographicContourLineSeries","get_d3","ScatterContourSeries","r6","pj","gw","pl","ValueBrushScale","ContourValueResolver","C","IgcGeographicContourLineSeriesComponent","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","connectedCallback","_attached","_flushQueuedAttributes","disconnectedCallback","observedAttributes","_observedAttributesIgcGeographicContourLineSeriesComponent","names","_isElementRegistered","registerElement","htmlTagName","isLineContour","d3","valueMemberPath","fillScale","_createFromInternal","_stylingContainer","_styling","actualFillScale","valueResolver","I","findByName","container","component","parent","_inStyling","beforeTriangulationStatusChanged","IgcGeographicContourLineSeriesModule","IgcScatterContourSeriesModule","GeographicHighDensityScatterSeriesView","HighDensityScatterSeries","sm","su","q1","rt","ts","tr","GeographicHighDensityScatterSeries","gz","get_d8","progressiveLoadStatusChanged","currentStatus","Color","IgcGeographicHighDensityScatterSeriesComponent","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","isPixel","d8","latitudeMemberPath","longitudeMemberPath","useBruteForce","_a","progressiveLoad","mouseOverEnabled","heatMinimum","heatMaximum","heatMinimumColor","heatMaximumColor","pointExtent","progressiveStatus","beforeProgressiveLoadStatusChanged","IgcGeographicHighDensityScatterSeriesModule","IgcHighDensityScatterSeriesModule","ArcGISOnlineMapImagery","ArcGISOnlineTileSource","bt","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUri","mapServerUriProperty","userName","userNameProperty","password","passwordProperty","userTokenProperty","isMapPublic","isMapPublicProperty","defaultTokenTimeout","tokenGenerationEndPoint","refererUri","acquireNewToken","substr","token","tileInfo","levelOfDetail","lods","IgcArcGISOnlineMapImagery","IgcArcGISOnlineMapImageryModule","IgcGeographicMapComponent","value","_height","style","notifyContainerResized","_width","_chart","undefined","_series","_innerColl","addListener","sender","_seriesAdapter","action","NotifyCollectionChangedAction","Add","addManualItem","newItems","Remove","removeManualItemAt","oldStartingIndex","Replace","insertManualItem","newStartingIndex","Reset","clearManualItems","contentSeries","actualSeries","_dataSource","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","ensureStylablePatched","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","destroy","dataSource","bindData","currSeries","children","push","notifyContentChanged","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","display","afterContentInit","isRegistered","create","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","_observedAttributesIgcGeographicMapComponent","zoomable","resizeBehavior","backgroundTilingMode","useWorldRectForZoomBounds","suppressZoomResetOnWorldRectChange","worldRect","actualWorldRect","xAxis","yAxis","isMap","ej","windowScale","actualWindowScale","zoomIsReady","getCurrentActualWorldRect","iv","geographic","updateZoomWindow","zoomWindow","updateWorldRect","convertGeographicToZoom","extraPixelPadding","northWest","southEast","getGeographicFromZoom","getGeographicPoint","pixelCoordinate","getPixelPoint","geographicCoordinate","getWindowPoint","styleUpdated","getActualWindowScaleHorizontal","getActualWindowScaleVertical","exportVisualData","zoomToGeographic","beforeImageTilesReady","IgcGeographicMapCoreModule","IgcOpenStreetMapImageryModule","IgcImagesChangedEventArgs","onImplementationCreated","IgcGeographicMapImagery","internal","externalName","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","opacity","findEphemera","indexOf","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","IgcGeographicMapModule","IgcGeographicShapeSeriesModule","IgcGeographicPolylineSeriesModule","IgcTileGeneratorMapImageryModule","IgcHeatTileGeneratorModule","IgcGeographicTileSeriesModule","IgcSizeScaleModule","IgcValueBrushScaleModule","IgcCustomPaletteColorScaleModule","IgcGeographicProportionalSymbolSeriesModule","IgcGeographicSymbolSeriesModule","IgcGeographicScatterAreaSeriesModule","IgcShapeDataSourceModule","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","isGeographic","dy","visibleFromScale","notifyIndexedPropertiesChanged","getItemValue","memberPathName","getItem","world","getPreviousOrExactIndex","skipUnknowns","getNextOrExactIndex","getSeriesValue","useInterpolation","getSeriesValuePosition","getSeriesValueBoundingBox","getSeriesValueMarkerBoundingBox","getSeriesHighValue","getSeriesHighValuePosition","getSeriesLowValue","getSeriesLowValuePosition","getSeriesValuePositionFromSeriesPixel","mouse","getSeriesValueFromSeriesPixel","getItemSpan","renderSeries","animate","IgcGeographicMarkerSeriesComponent","_observedAttributesIgcGeographicMarkerSeriesComponent","markerType","markerThickness","markerOutlineMode","markerFillMode","markerTemplate","markerBrush","markerOutline","maximumMarkers","actualMarkerTemplate","actualMarkerBrush","actualMarkerOutline","GeographicPolylineSeriesView","rk","rs","GeographicPolylineSeries","get_eb","styleShape","ScatterPolylineSeries","rp","Style","StyleSelector","IgcGeographicPolylineSeriesComponent","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicPolylineSeriesComponent","isPolyline","eb","shapeFill","fill","ensureShapeStyle","shapeStroke","stroke","shapeStrokeThickness","strokeThickness","shapeOpacity","beforeStyleShape","IgcScatterPolylineSeriesModule","GeographicProportionalSymbolSeriesView","sd","sb","rx","wl","si","vl","wb","v6","r1","vi","rw","rz","ry","cs","cv","cw","cu","cx","cz","GeographicProportionalSymbolSeries","get_c5","assigningScatterStyle","assigningScatterMarkerStyle","rq","g0","BubbleSeries","st","sn","ss","sh","r0","BrushScale","ScatterItemSearchMode","SizeScale","IgcGeographicProportionalSymbolSeriesComponent","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","hasOnlyMarkers","c5","radiusMemberPath","radiusScale","labelMemberPath","fillMemberPath","fillScaleUseGlobalValues","markerOutlineUsesFillScale","markerOutlineBrightness","markerBrushBrightness","radiusScaleUseGlobalValues","isCustomScatterStyleAllowed","isCustomScatterMarkerStyleAllowed","itemSearchMode","itemSearchThreshold","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","IgcBubbleSeriesModule","IgcGeographicScatterAreaSeriesComponent","_observedAttributesIgcGeographicScatterAreaSeriesComponent","isArea","colorMemberPath","colorScale","actualColorScale","updateActualColorScale","IgcScatterAreaSeriesModule","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","shapeDataSource","_shapeDataSource","updateShapeDataSource","databaseSource","_databaseSource","onUpdateDataSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","dataBind","shapeMemberPath","isCustomShapeStyleAllowed","isCustomShapeMarkerStyleAllowed","itemSearchPointsThreshold","shapefileDataSource","setNativeElement","shapeFilterResolution","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","GeographicShapeSeriesView","sr","ul","sq","GeographicShapeSeries","get_ea","ScatterPolygonSeries","r7","so","sp","s7","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","DeviceUtils","MarkerType","IgcGeographicShapeSeriesComponent","_observedAttributesIgcGeographicShapeSeriesComponent","isPolygon","ea","markerCollisionAvoidance","IgcScatterPolygonSeriesModule","GeographicSymbolSeriesView","r2","GeographicSymbolSeries","ScatterSeries","IgcGeographicSymbolSeriesComponent","_observedAttributesIgcGeographicSymbolSeriesComponent","IgcScatterSeriesModule","GeographicTileSeries","IgcGeographicTileSeriesComponent","_observedAttributesIgcGeographicTileSeriesComponent","isTile","tileImagery","IgcTileSeriesModule","IgcGeographicXYTriangulatingSeriesComponent","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","triangulationDataSource","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","source","getTriangleData","triangleVertexMemberPath1","triangleVertexMemberPath2","triangleVertexMemberPath3","IgcImageTilesReadyEventArgs","IgcOpenStreetMapImagery","TileGeneratorMapImagery","TileGeneratorTileSource","uri","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","src","url","ITileGenerator","IgcTileGeneratorMapImagery","IgcTileSeriesComponent","_observedAttributesIgcTileSeriesComponent"],"sourceRoot":""}
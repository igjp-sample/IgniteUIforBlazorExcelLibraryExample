{"version":3,"file":"igniteui-webinputs.83fc5cf3e40a1b58935a.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPaneType.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneOrientation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/UnpinnedLocation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPoint.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPane_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-point.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DragService.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-drag-service.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerShowHeaderIconOnHover.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/TabHeaderElement.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerLayout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-layout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerResourceStrings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-resource-strings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/LayoutChangeEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-layout-change-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManager.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerPaneType {\r\n\tSplitPane = 0,\r\n\tContentPane = 1,\r\n\tTabGroupPane = 2,\r\n\tDocumentHost = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerPaneType_$type = markEnum('DockManagerPaneType', 'SplitPane,0|ContentPane,1|TabGroupPane,2|DocumentHost,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum SplitPaneOrientation {\r\n\tHorizontal = 0,\r\n\tVertical = 1\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let SplitPaneOrientation_$type = markEnum('SplitPaneOrientation', 'Horizontal,0|Vertical,1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum UnpinnedLocation {\r\n\tTop = 0,\r\n\tBottom = 1,\r\n\tLeft = 2,\r\n\tRight = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let UnpinnedLocation_$type = markEnum('UnpinnedLocation', 'Top,0|Bottom,1|Left,2|Right,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPoint extends Base {\r\n\tstatic $t: Type = markType(DockManagerPoint, 'DockManagerPoint');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate e: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.e;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.e = a;\r\n\t\tthis.a.l = this.e;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget c(): number {\r\n\t\tlet ret_ = this.b.k(\"x\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset c(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"x\", value_);\r\n\t}\r\n\tget d(): number {\r\n\t\tlet ret_ = this.b.k(\"y\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset d(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"y\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType, enumGetBox, EnumUtil } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class DockManagerPane extends Base {\r\n\tstatic $t: Type = markType(DockManagerPane, 'DockManagerPane');\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tprotected abstract b(): WCNativeHelper;\r\n\tget d(): string {\r\n\t\tlet ret_ = this.b().k(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset d(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b().s(\"name\", value_);\r\n\t}\r\n\tstatic createFromNative(native_: any): DockManagerPane {\r\n\t\tif (native_ == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet a: string = <string>(native_.type);\r\n\t\tif (a == null || a == undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tswitch (a.toLowerCase()) {\r\n\t\t\tcase \"splitpane\":\r\n\t\t\t{\r\n\t\t\t\tlet b = new SplitPane();\r\n\t\t\t\tb.setNativeElement(native_);\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"contentpane\":\r\n\t\t\t{\r\n\t\t\t\tlet c = new ContentPane();\r\n\t\t\t\tc.setNativeElement(native_);\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"tabgrouppane\":\r\n\t\t\t{\r\n\t\t\t\tlet d = new TabGroupPane();\r\n\t\t\t\td.setNativeElement(native_);\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"documenthost\":\r\n\t\t\t{\r\n\t\t\t\tlet e = new DocumentHost();\r\n\t\t\t\te.setNativeElement(native_);\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DocumentHost extends DockManagerPane {\r\n\tstatic $t: Type = markType(DocumentHost, 'DocumentHost', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate j: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.j;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.j = a;\r\n\t\tthis.g.l = this.j;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.h.k(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.k(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.h.s(\"type\", value_);\r\n\t}\r\n\tget f(): SplitPane {\r\n\t\tlet ret_ = this.h.j(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset f(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"rootPane\", value_);\r\n\t}\r\n\tget i(): number {\r\n\t\tlet ret_ = this.h.k(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset i(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"size\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabGroupPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(TabGroupPane, 'TabGroupPane', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate m: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.m;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.m = a;\r\n\t\tthis.g.l = this.m;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget o(): string {\r\n\t\tlet ret_ = this.h.k(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset o(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.k(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.h.s(\"type\", value_);\r\n\t}\r\n\tget e(): ContentPaneCollection {\r\n\t\tlet ret_ = this.h.i(\"panes\", (a: any) => new ContentPaneCollection(), (a: any) => new ContentPane());\r\n\t\treturn <ContentPaneCollection>ret_;\r\n\t}\r\n\tget l(): number {\r\n\t\tlet ret_ = this.h.k(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset l(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"size\", value_);\r\n\t}\r\n\tget k(): number {\r\n\t\tlet ret_ = this.h.k(\"selectedIndex\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset k(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"selectedIndex\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowEmpty\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.k(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"isMaximized\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(ContentPane, 'ContentPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate v: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.v;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.v = a;\r\n\t\tthis.g.l = this.v;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget ab(): string {\r\n\t\tlet ret_ = this.h.k(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ab(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.k(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.h.s(\"type\", value_);\r\n\t}\r\n\tget x(): string {\r\n\t\tlet ret_ = this.h.k(\"contentId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset x(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"contentId\", value_);\r\n\t}\r\n\tget z(): string {\r\n\t\tlet ret_ = this.h.k(\"header\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset z(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"header\", value_);\r\n\t}\r\n\tget aa(): string {\r\n\t\tlet ret_ = this.h.k(\"headerId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset aa(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"headerId\", value_);\r\n\t}\r\n\tget ac(): string {\r\n\t\tlet ret_ = this.h.k(\"tabHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ac(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"tabHeaderId\", value_);\r\n\t}\r\n\tget ad(): string {\r\n\t\tlet ret_ = this.h.k(\"unpinnedHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ad(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"unpinnedHeaderId\", value_);\r\n\t}\r\n\tget y(): string {\r\n\t\tlet ret_ = this.h.k(\"floatingHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset y(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"floatingHeaderId\", value_);\r\n\t}\r\n\tget t(): number {\r\n\t\tlet ret_ = this.h.k(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset t(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"size\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowClose\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowClose\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowMaximize\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowPinning\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowPinning\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowDocking\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowDocking\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.k(\"acceptsInnerDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"acceptsInnerDock\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowFloating\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowFloating\", value_);\r\n\t}\r\n\tget u(): number {\r\n\t\tlet ret_ = this.h.k(\"unpinnedSize\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset u(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"unpinnedSize\", value_);\r\n\t}\r\n\tget s(): boolean {\r\n\t\tlet ret_ = this.h.k(\"isPinned\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset s(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"isPinned\", value_);\r\n\t}\r\n\tget r(): boolean {\r\n\t\tlet ret_ = this.h.k(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset r(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"isMaximized\", value_);\r\n\t}\r\n\tget f(): UnpinnedLocation {\r\n\t\tlet ret_ = this.h.k(\"unpinnedLocation\");\r\n\t\tret_ = enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, this.h.f<UnpinnedLocation>(UnpinnedLocation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, ret_);\r\n\t}\r\n\tset f(a: UnpinnedLocation) {\r\n\t\tlet value_ = <any>enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.h.s(\"unpinnedLocation\", value_);\r\n\t}\r\n\tget q(): boolean {\r\n\t\tlet ret_ = this.h.k(\"hidden\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset q(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"hidden\", value_);\r\n\t}\r\n\tget o(): boolean {\r\n\t\tlet ret_ = this.h.k(\"disabled\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset o(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"disabled\", value_);\r\n\t}\r\n\tget p(): boolean {\r\n\t\tlet ret_ = this.h.k(\"documentOnly\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset p(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"documentOnly\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPaneCollection extends ObservableCollection$1<ContentPane> {\r\n\tstatic $t: Type = markType(ContentPaneCollection, 'ContentPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>ContentPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>ContentPane).$, 0);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(SplitPane, 'SplitPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.j;\r\n\t}\r\n\tprivate i: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get j(): WCNativeHelper {\r\n\t\treturn this.i;\r\n\t}\r\n\tprivate q: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.q;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.q = a;\r\n\t\tthis.i.l = this.q;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget s(): string {\r\n\t\tlet ret_ = this.j.k(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset s(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.j.k(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.j.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.j.s(\"type\", value_);\r\n\t}\r\n\tget h(): SplitPaneOrientation {\r\n\t\tlet ret_ = this.j.k(\"orientation\");\r\n\t\tret_ = enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, this.j.f<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_);\r\n\t}\r\n\tset h(a: SplitPaneOrientation) {\r\n\t\tlet value_ = <any>enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.j.s(\"orientation\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneCollection {\r\n\t\tlet ret_ = this.j.i(\"panes\", (a: any) => new DockManagerPaneCollection(), (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPaneCollection>ret_;\r\n\t}\r\n\tget p(): number {\r\n\t\tlet ret_ = this.j.k(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset p(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"size\", value_);\r\n\t}\r\n\tget g(): DockManagerPoint {\r\n\t\tlet ret_ = this.j.j(\"floatingLocation\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset g(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"floatingLocation\", value_);\r\n\t}\r\n\tget o(): number {\r\n\t\tlet ret_ = this.j.k(\"floatingWidth\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset o(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"floatingWidth\", value_);\r\n\t}\r\n\tget n(): number {\r\n\t\tlet ret_ = this.j.k(\"floatingHeight\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset n(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"floatingHeight\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.j.k(\"floatingResizable\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"floatingResizable\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.j.k(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"allowEmpty\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.j.k(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"isMaximized\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPaneCollection extends ObservableCollection$1<DockManagerPane> {\r\n\tstatic $t: Type = markType(DockManagerPaneCollection, 'DockManagerPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>DockManagerPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>DockManagerPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\n\r\nexport abstract class IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DockManagerPane\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPane {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerPaneComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\tget name() : string {\r\n\t\treturn (this.i.d as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.d = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerPaneComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        \r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { DockManagerPane as DockManagerPane_internal } from './DockManagerPane';\r\nimport { IgcDockManagerPaneComponent as IgcDockManagerPaneComponent } from './igc-dock-manager-pane-component';\r\n\r\nexport class IgcDockManagerPaneCollection extends IgCollection<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n    constructor(list?: IgcDockManagerPaneComponent[]) {\r\n        super();\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal>((IgcDockManagerPaneComponent as any).$type, (DockManagerPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcDockManagerPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPoint as DockManagerPoint_internal } from \"./DockManagerPoint\";\r\n\r\nexport class IgcDockManagerPoint\r\n{\r\n\r\nprotected createImplementation() : DockManagerPoint_internal\r\n{\r\n\treturn new DockManagerPoint_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPoint_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tget x() : number {\r\n\t\treturn (this.i.c as number);\r\n\t}\r\n\tset x(v: number) {\r\n\t\tthis.i.c = +v;\r\n\t}\r\n\tget y() : number {\r\n\t\treturn (this.i.d as number);\r\n\t}\r\n\tset y(v: number) {\r\n\t\tthis.i.d = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { IgcDockManagerPaneCollection } from \"./igc-dock-manager-pane-collection\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { DockManagerPaneCollection as DockManagerPaneCollection_internal } from \"./DockManagerPaneCollection\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcSplitPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : SplitPane\r\n{\r\n\treturn new SplitPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : SplitPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.s as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.s = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget Type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset Type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * The orientation of the split pane.\r\n\t*/\r\n\tget orientation() : SplitPaneOrientation {\r\n\t\treturn this.i.h;\r\n\t}\r\n\tset orientation(v: SplitPaneOrientation) {\r\n\t\tthis.i.h = ensureEnum<SplitPaneOrientation>(SplitPaneOrientation_$type, v);\r\n\t                                        this._a(\"orientation\", enumToString<SplitPaneOrientation>(SplitPaneOrientation_$type, this.i.h));\r\n\t}\r\n\tprivate _panes: IgcDockManagerPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child panes of the split pane.\r\n\t*/\r\n\tget panes() : IgcDockManagerPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcDockManagerPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcDockManagerPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcDockManagerPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<DockManagerPane>((DockManagerPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.p as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.p = +v;\r\n\t                                        this._a(\"size\", this.i.p);\r\n\t}\r\n\t/**\r\n\t * The absolute location point of the pane. Applies only for floating panes.\r\n\t*/\r\n\tget floatingLocation() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.g;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset floatingLocation(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.g = null : this.i.g = v.i;\r\n\t}\r\n\t/**\r\n\t * The absolute width of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingWidth() : number {\r\n\t\treturn (this.i.o as number);\r\n\t}\r\n\tset floatingWidth(v: number) {\r\n\t\tthis.i.o = +v;\r\n\t                                        this._a(\"floatingWidth\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * The absolute height of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingHeight() : number {\r\n\t\treturn (this.i.n as number);\r\n\t}\r\n\tset floatingHeight(v: number) {\r\n\t\tthis.i.n = +v;\r\n\t                                        this._a(\"floatingHeight\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether floating pane resizing is allowed. Applies only for floating panes.\r\n\t*/\r\n\tget floatingResizable() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset floatingResizable(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"floatingResizable\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether a split pane is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.m);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\tif (this.floatingLocation && (this.floatingLocation as any).name && (this.floatingLocation as any).name == name) { return this.floatingLocation; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcSplitPaneComponent } from './igc-split-pane-component';\r\nimport { SplitPane } from './SplitPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcSplitPaneModule {\r\n    public static register(): void {\r\n        IgcSplitPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcSplitPaneComponent\", IgcSplitPaneComponent);\r\n        TypeRegistrar.register(\"SplitPane\", (<any>SplitPane).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcContentPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : ContentPane\r\n{\r\n\treturn new ContentPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ContentPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.ab as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.ab = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget Type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset Type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content element.\r\n\t*/\r\n\tget contentId() : string {\r\n\t\treturn (this.i.x as string);\r\n\t}\r\n\tset contentId(v: string) {\r\n\t\tthis.i.x = v;\r\n\t}\r\n\t/**\r\n\t * The text header of the content pane. Even if header slot templates are used, the text header is used for aria label.\r\n\t*/\r\n\tget header() : string {\r\n\t\treturn (this.i.z as string);\r\n\t}\r\n\tset header(v: string) {\r\n\t\tthis.i.z = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content pane header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget headerId() : string {\r\n\t\treturn (this.i.aa as string);\r\n\t}\r\n\tset headerId(v: string) {\r\n\t\tthis.i.aa = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the tab header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget tabHeaderId() : string {\r\n\t\treturn (this.i.ac as string);\r\n\t}\r\n\tset tabHeaderId(v: string) {\r\n\t\tthis.i.ac = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the unpinned header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget unpinnedHeaderId() : string {\r\n\t\treturn (this.i.ad as string);\r\n\t}\r\n\tset unpinnedHeaderId(v: string) {\r\n\t\tthis.i.ad = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the floating header element. If not set, the `headerId` property value is used.\r\n\t*/\r\n\tget floatingHeaderId() : string {\r\n\t\treturn (this.i.y as string);\r\n\t}\r\n\tset floatingHeaderId(v: string) {\r\n\t\tthis.i.y = v;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.t as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.t = +v;\r\n\t                                        this._a(\"size\", this.i.t);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to close the pane. Defaults to true.\r\n\t*/\r\n\tget allowClose() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset allowClose(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"allowClose\", this.i.j);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize the pane.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to pin/unpin the pane. Defaults to true.\r\n\t*/\r\n\tget allowPinning() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset allowPinning(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"allowPinning\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to dock the pane. Defaults to true.\r\n\t*/\r\n\tget allowDocking() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowDocking(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowDocking\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user can inner dock another pane in this one. Defaults to true.\r\n\t*/\r\n\tget acceptsInnerDock() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset acceptsInnerDock(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"acceptsInnerDock\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to make the pane floating. Defaults to true.\r\n\t*/\r\n\tget allowFloating() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowFloating(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowFloating\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * The absolute size of the pane in an unpinned state. Defaults to 200.\r\n\t*/\r\n\tget unpinnedSize() : number {\r\n\t\treturn (this.i.u as number);\r\n\t}\r\n\tset unpinnedSize(v: number) {\r\n\t\tthis.i.u = +v;\r\n\t                                        this._a(\"unpinnedSize\", this.i.u);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is pinned or not. Defaults to true.\r\n\t*/\r\n\tget isPinned() : boolean {\r\n\t\treturn (this.i.s as boolean);\r\n\t}\r\n\tset isPinned(v: boolean) {\r\n\t\tthis.i.s = ensureBool(v);\r\n\t                                        this._a(\"isPinned\", this.i.s);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.r as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.r = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.r);\r\n\t}\r\n\t/**\r\n\t * The desired unpinned location of the content pane.\r\n\t * If not set the Dock Manager automatically calculates it based on the location of the pane relatively to the document host.\r\n\t * If more than one document host is presented, the closest one in the pane hierarchy will be used for the calculation.\r\n\t * If there is no document host, the default location is left.\r\n\t*/\r\n\tget unpinnedLocation() : UnpinnedLocation {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset unpinnedLocation(v: UnpinnedLocation) {\r\n\t\tthis.i.f = ensureEnum<UnpinnedLocation>(UnpinnedLocation_$type, v);\r\n\t                                        this._a(\"unpinnedLocation\", enumToString<UnpinnedLocation>(UnpinnedLocation_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is hidden in the UI. Defaults to false.\r\n\t*/\r\n\tget hidden() : boolean {\r\n\t\treturn (this.i.q as boolean);\r\n\t}\r\n\tset hidden(v: boolean) {\r\n\t\tthis.i.q = ensureBool(v);\r\n\t                                        this._a(\"hidden\", this.i.q);\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is disabled. Defaults to false.\r\n\t*/\r\n\tget disabled() : boolean {\r\n\t\treturn (this.i.o as boolean);\r\n\t}\r\n\tset disabled(v: boolean) {\r\n\t\tthis.i.o = ensureBool(v);\r\n\t                                        this._a(\"disabled\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * Marks that a content pane can be docked only inside a document host.\r\n\t*/\r\n\tget documentOnly() : boolean {\r\n\t\treturn (this.i.p as boolean);\r\n\t}\r\n\tset documentOnly(v: boolean) {\r\n\t\tthis.i.p = ensureBool(v);\r\n\t                                        this._a(\"documentOnly\", this.i.p);\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcContentPaneComponent } from './igc-content-pane-component';\r\nimport { ContentPane } from './ContentPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcContentPaneModule {\r\n    public static register(): void {\r\n        IgcContentPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcContentPaneComponent\", IgcContentPaneComponent);\r\n        TypeRegistrar.register(\"ContentPane\", (<any>ContentPane).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { DocumentHost } from \"./DocumentHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcDocumentHostComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DocumentHost\r\n{\r\n\treturn new DocumentHost();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : DocumentHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget Type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset Type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The root split pane of the document host.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.i as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.i = +v;\r\n\t                                        this._a(\"size\", this.i.i);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.rootPane && (this.rootPane as any)._styling) {\r\n\t    (this.rootPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcDocumentHostComponent } from './igc-document-host-component';\r\nimport { DocumentHost } from './DocumentHost';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcDocumentHostModule {\r\n    public static register(): void {\r\n        IgcDocumentHostComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcDocumentHostComponent\", IgcDocumentHostComponent);\r\n        TypeRegistrar.register(\"DocumentHost\", (<any>DocumentHost).$type);\r\n    }\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { ContentPane as ContentPane_internal } from './ContentPane';\r\nimport { IgcContentPaneComponent as IgcContentPaneComponent } from './igc-content-pane-component';\r\n\r\nexport class IgcContentPaneCollection extends IgCollection<IgcContentPaneComponent, ContentPane_internal> {\r\n    constructor(list?: IgcContentPaneComponent[]) {\r\n        super();\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal> {\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal>((IgcContentPaneComponent as any).$type, (ContentPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = new IgcContentPaneComponent();\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcContentPaneCollection } from \"./igc-content-pane-collection\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { TabGroupPane } from \"./TabGroupPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { ContentPaneCollection as ContentPaneCollection_internal } from \"./ContentPaneCollection\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcTabGroupPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : TabGroupPane\r\n{\r\n\treturn new TabGroupPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TabGroupPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.o as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.o = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget Type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset Type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\tprivate _panes: IgcContentPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child content panes of the tab group.\r\n\t*/\r\n\tget panes() : IgcContentPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcContentPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcContentPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcContentPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<ContentPane>((ContentPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.l as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.l = +v;\r\n\t                                        this._a(\"size\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * The index of the selected tab.\r\n\t*/\r\n\tget selectedIndex() : number {\r\n\t\treturn (this.i.k as number);\r\n\t}\r\n\tset selectedIndex(v: number) {\r\n\t\tthis.i.k = +v;\r\n\t                                        this._a(\"selectedIndex\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether a tab group is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.j);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabGroupPaneComponent } from './igc-tab-group-pane-component';\r\nimport { TabGroupPane } from './TabGroupPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabGroupPaneModule {\r\n    public static register(): void {\r\n        IgcTabGroupPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTabGroupPaneComponent\", IgcTabGroupPaneComponent);\r\n        TypeRegistrar.register(\"TabGroupPane\", (<any>TabGroupPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DragService extends Base {\r\n\tstatic $t: Type = markType(DragService, 'DragService');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.l = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DragService as DragService_internal } from \"./DragService\";\r\n\r\nexport class IgcDragService\r\n{\r\n\r\nprotected createImplementation() : DragService_internal\r\n{\r\n\treturn new DragService_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DragService_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerShowHeaderIconOnHover {\r\n\tCloseOnly = 0,\r\n\tMoreOptionsOnly = 1,\r\n\tAll = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerShowHeaderIconOnHover_$type = markEnum('DockManagerShowHeaderIconOnHover', 'CloseOnly,0|MoreOptionsOnly,1|All,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DragService } from \"./DragService\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabHeaderElement extends BaseElement {\r\n\tstatic $t: Type = markType(TabHeaderElement, 'TabHeaderElement', (<any>BaseElement).$);\r\n\tprivate b: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get c(): WCNativeHelper {\r\n\t\treturn this.b;\r\n\t}\r\n\tprivate d: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.d;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.d = a;\r\n\t\tthis.b.l = this.d;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): DragService {\r\n\t\tlet ret_ = this.c.j(\"dragService\", (a: any) => new DragService());\r\n\t\treturn <DragService>ret_;\r\n\t}\r\n\tset a(a: DragService) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.c.s(\"dragService\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDragService } from \"./igc-drag-service\";\r\nimport { TabHeaderElement as TabHeaderElement_internal } from \"./TabHeaderElement\";\r\n\r\n/**\r\n * Describes a tab header element.\r\n*/\r\nexport class IgcTabHeaderElement\r\n{\r\n\r\nprotected createImplementation() : TabHeaderElement_internal\r\n{\r\n\treturn new TabHeaderElement_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : TabHeaderElement_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\t/**\r\n\t * Gets/sets the drag service.\r\n\t*/\r\n\tget dragService() : IgcDragService {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDragService();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dragService(v: IgcDragService) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.dragService && (this.dragService as any).name && (this.dragService as any).name == name) { return this.dragService; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabHeaderElement } from './igc-tab-header-element';\r\nimport { TabHeaderElement } from './TabHeaderElement';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabHeaderElementModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTabHeaderElement\", IgcTabHeaderElement);\r\n        TypeRegistrar.register(\"TabHeaderElement\", (<any>TabHeaderElement).$type);\r\n    }\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { SplitPane as SplitPane_internal } from './SplitPane';\r\nimport { IgcSplitPaneComponent as IgcSplitPaneComponent } from './igc-split-pane-component';\r\n\r\nexport class IgcSplitPaneCollection extends IgCollection<IgcSplitPaneComponent, SplitPane_internal> {\r\n    constructor(list?: IgcSplitPaneComponent[]) {\r\n        super();\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal> {\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal>((IgcSplitPaneComponent as any).$type, (SplitPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = new IgcSplitPaneComponent();\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPaneCollection extends ObservableCollection$1<SplitPane> {\r\n\tstatic $t: Type = markType(SplitPaneCollection, 'SplitPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>SplitPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>SplitPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SplitPaneCollection } from \"./SplitPaneCollection\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerLayout extends Base {\r\n\tstatic $t: Type = markType(DockManagerLayout, 'DockManagerLayout');\r\n\tget h(): string {\r\n\t\tlet ret_ = this.d.k(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.s(\"name\", value_);\r\n\t}\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tprivate c: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get d(): WCNativeHelper {\r\n\t\treturn this.c;\r\n\t}\r\n\tprivate f: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.f;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.f = a;\r\n\t\tthis.c.l = this.f;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): SplitPane {\r\n\t\tlet ret_ = this.d.j(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset a(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.s(\"rootPane\", value_);\r\n\t}\r\n\tget b(): SplitPaneCollection {\r\n\t\tlet ret_ = this.d.i(\"floatingPanes\", (a: any) => new SplitPaneCollection(), (a: any) => new SplitPane());\r\n\t\treturn <SplitPaneCollection>ret_;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcSplitPaneCollection } from \"./igc-split-pane-collection\";\r\nimport { DockManagerLayout as DockManagerLayout_internal } from \"./DockManagerLayout\";\r\nimport { SplitPaneCollection as SplitPaneCollection_internal } from \"./SplitPaneCollection\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * Describes a Dock Manager layout.\r\n*/\r\nexport class IgcDockManagerLayout\r\n{\r\n\r\nprotected createImplementation() : DockManagerLayout_internal\r\n{\r\n\treturn new DockManagerLayout_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerLayout_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tget name() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\t/**\r\n\t * The root split pane of the layout.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\tprivate _floatingPanes: IgcSplitPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The floating panes of the layout.\r\n\t*/\r\n\tget floatingPanes() : IgcSplitPaneCollection {\r\n\t                                        if (this._floatingPanes === null) {\r\n\t                                            let coll = new IgcSplitPaneCollection();\r\n\t                                            let innerColl = this.i.b;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._floatingPanes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._floatingPanes;\r\n\t}\r\n\tset floatingPanes(v: IgcSplitPaneCollection) {\r\n\t                                        if (this._floatingPanes !== null) {\r\n\t                                            (this._floatingPanes as any)._setSyncTarget(null);\r\n\t                                            this._floatingPanes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSplitPaneCollection();\r\n\t                                        this._floatingPanes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<SplitPane>((SplitPane as any).$type);\r\n\t                                        let innerColl = this.i.b;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._floatingPanes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\tif (this.floatingPanes != null && this.floatingPanes.findByName && this.floatingPanes.findByName(name)) { return this.floatingPanes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerResourceStrings extends Base {\r\n\tstatic $t: Type = markType(DockManagerResourceStrings, 'DockManagerResourceStrings');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.l = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget e(): string {\r\n\t\tlet ret_ = this.b.k(\"close\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset e(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"close\", value_);\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.b.k(\"pin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"pin\", value_);\r\n\t}\r\n\tget m(): string {\r\n\t\tlet ret_ = this.b.k(\"unpin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset m(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"unpin\", value_);\r\n\t}\r\n\tget g(): string {\r\n\t\tlet ret_ = this.b.k(\"maximize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset g(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"maximize\", value_);\r\n\t}\r\n\tget h(): string {\r\n\t\tlet ret_ = this.b.k(\"minimize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"minimize\", value_);\r\n\t}\r\n\tget i(): string {\r\n\t\tlet ret_ = this.b.k(\"moreOptions\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset i(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"moreOptions\", value_);\r\n\t}\r\n\tget j(): string {\r\n\t\tlet ret_ = this.b.k(\"moreTabs\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset j(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"moreTabs\", value_);\r\n\t}\r\n\tget k(): string {\r\n\t\tlet ret_ = this.b.k(\"panes\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset k(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"panes\", value_);\r\n\t}\r\n\tget f(): string {\r\n\t\tlet ret_ = this.b.k(\"documents\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset f(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"documents\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerResourceStrings as DockManagerResourceStrings_internal } from \"./DockManagerResourceStrings\";\r\n\r\n/**\r\n * Describes dock manager resource strings.\r\n*/\r\nexport class IgcDockManagerResourceStrings\r\n{\r\n\r\nprotected createImplementation() : DockManagerResourceStrings_internal\r\n{\r\n\treturn new DockManagerResourceStrings_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerResourceStrings_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tget close() : string {\r\n\t\treturn (this.i.e as string);\r\n\t}\r\n\tset close(v: string) {\r\n\t\tthis.i.e = v;\r\n\t}\r\n\tget pin() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset pin(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\tget unpin() : string {\r\n\t\treturn (this.i.m as string);\r\n\t}\r\n\tset unpin(v: string) {\r\n\t\tthis.i.m = v;\r\n\t}\r\n\tget maximize() : string {\r\n\t\treturn (this.i.g as string);\r\n\t}\r\n\tset maximize(v: string) {\r\n\t\tthis.i.g = v;\r\n\t}\r\n\tget minimize() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset minimize(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\tget moreOptions() : string {\r\n\t\treturn (this.i.i as string);\r\n\t}\r\n\tset moreOptions(v: string) {\r\n\t\tthis.i.i = v;\r\n\t}\r\n\tget moreTabs() : string {\r\n\t\treturn (this.i.j as string);\r\n\t}\r\n\tset moreTabs(v: string) {\r\n\t\tthis.i.j = v;\r\n\t}\r\n\tget panes() : string {\r\n\t\treturn (this.i.k as string);\r\n\t}\r\n\tset panes(v: string) {\r\n\t\tthis.i.k = v;\r\n\t}\r\n\tget documents() : string {\r\n\t\treturn (this.i.f as string);\r\n\t}\r\n\tset documents(v: string) {\r\n\t\tthis.i.f = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class LayoutChangeEventArgs extends Base {\r\n\tstatic $t: Type = markType(LayoutChangeEventArgs, 'LayoutChangeEventArgs');\r\n\ta: DockManagerLayout = null;\r\n\tstatic b(a: any): LayoutChangeEventArgs {\r\n\t\treturn ((() => {\r\n\t\t\tlet $ret = new LayoutChangeEventArgs();\r\n\t\t\t$ret.a = <DockManagerLayout>a;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { LayoutChangeEventArgs as LayoutChangeEventArgs_internal } from \"./LayoutChangeEventArgs\";\r\n\r\nexport class IgcLayoutChangeEventArgs\r\n{\r\n\r\nprotected createImplementation() : LayoutChangeEventArgs_internal\r\n{\r\n\treturn new LayoutChangeEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : LayoutChangeEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tget detail() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset detail(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, enumGetBox, EnumUtil, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { DockManagerResourceStrings } from \"./DockManagerResourceStrings\";\r\nimport { LayoutChangeEventArgs } from \"./LayoutChangeEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManager extends BaseElement {\r\n\tstatic $t: Type = markType(DockManager, 'DockManager', (<any>BaseElement).$);\r\n\tlayoutChange: (sender: any, args: LayoutChangeEventArgs) => void = null;\r\n\tlayoutChangeChanged(): void {\r\n\t\tif (this.layoutChange != null) {\r\n\t\t\tthis.j.o(\"layoutChange\", (a: any) => this.layoutChange(this, LayoutChangeEventArgs.b(this.b)), false);\r\n\t\t} else {\r\n\t\t\tthis.j.r(\"layoutChange\");\r\n\t\t}\r\n\t}\r\n\tprivate i: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get j(): WCNativeHelper {\r\n\t\treturn this.i;\r\n\t}\r\n\tprivate o: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.o;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.o = a;\r\n\t\tthis.i.l = this.o;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget b(): DockManagerLayout {\r\n\t\tlet ret_ = this.j.j(\"layout\", (a: any) => new DockManagerLayout());\r\n\t\treturn <DockManagerLayout>ret_;\r\n\t}\r\n\tset b(a: DockManagerLayout) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"layout\", value_);\r\n\t}\r\n\tget c(): DockManagerPane {\r\n\t\tlet ret_ = this.j.j(\"draggedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset c(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"draggedPane\", value_);\r\n\t}\r\n\tget e(): DockManagerPoint {\r\n\t\tlet ret_ = this.j.j(\"dropPosition\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset e(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"dropPosition\", value_);\r\n\t}\r\n\tget a(): ContentPane {\r\n\t\tlet ret_ = this.j.j(\"activePane\", (a: any) => new ContentPane());\r\n\t\treturn <ContentPane>ret_;\r\n\t}\r\n\tset a(a: ContentPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"activePane\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.j.k(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"allowMaximize\", value_);\r\n\t}\r\n\tget g(): DockManagerShowHeaderIconOnHover {\r\n\t\tlet ret_ = this.j.k(\"showHeaderIconOnHover\");\r\n\t\tret_ = enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.j.f<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_);\r\n\t}\r\n\tset g(a: DockManagerShowHeaderIconOnHover) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.j.s(\"showHeaderIconOnHover\", value_);\r\n\t}\r\n\tget d(): DockManagerPane {\r\n\t\tlet ret_ = this.j.j(\"maximizedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset d(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"maximizedPane\", value_);\r\n\t}\r\n\tget f(): DockManagerResourceStrings {\r\n\t\tlet ret_ = this.j.j(\"resourceStrings\", (a: any) => new DockManagerResourceStrings());\r\n\t\treturn <DockManagerResourceStrings>ret_;\r\n\t}\r\n\tset f(a: DockManagerResourceStrings) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"resourceStrings\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.j.k(\"allowFloatingPanesResize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"allowFloatingPanesResize\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.j.k(\"disableKeyboardNavigation\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"disableKeyboardNavigation\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.j.k(\"allowInnerDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"allowInnerDock\", value_);\r\n\t}\r\n\tq(a: string): void {\r\n\t\tthis.nativeElement.focusPane(this.j.h(a));\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcContentPaneComponent } from \"./igc-content-pane-component\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { IgcDockManagerResourceStrings } from \"./igc-dock-manager-resource-strings\";\r\nimport { IgcLayoutChangeEventArgs } from \"./igc-layout-change-event-args\";\r\nimport { DockManager } from \"./DockManager\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Describes a Dock Manager component.\r\n*/\r\nexport class IgcDockManagerComponent\r\n{\r\n\r\nprotected createImplementation() : DockManager\r\n{\r\n\treturn new DockManager();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManager {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * Gets/sets the layout configuration of the Dock Manager.\r\n\t*/\r\n\tget layout() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.b;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset layout(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.b = null : this.i.b = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the currently dragged pane.\r\n\t*/\r\n\tget draggedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.c;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset draggedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.c = null : this.i.c = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the current drop position when performing custom drag/drop.\r\n\t*/\r\n\tget dropPosition() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.e;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dropPosition(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.e = null : this.i.e = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the active pane of the Dock Manager.\r\n\t*/\r\n\tget activePane() : IgcContentPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContentPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset activePane(v: IgcContentPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize panes. Defaults to true.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines which tab header icons should show when hovering over the tab with the mouse. Defaults to undefined.\r\n\t*/\r\n\tget showHeaderIconOnHover() : DockManagerShowHeaderIconOnHover {\r\n\t\treturn this.i.g;\r\n\t}\r\n\tset showHeaderIconOnHover(v: DockManagerShowHeaderIconOnHover) {\r\n\t\tthis.i.g = ensureEnum<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, v);\r\n\t                                        this._a(\"showHeaderIconOnHover\", enumToString<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.i.g));\r\n\t}\r\n\t/**\r\n\t * Gets/sets the maximized pane.\r\n\t*/\r\n\tget maximizedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.d;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset maximizedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.d = null : this.i.d = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the resource strings.\r\n\t*/\r\n\tget resourceStrings() : IgcDockManagerResourceStrings {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerResourceStrings();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset resourceStrings(v: IgcDockManagerResourceStrings) {\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to resize floating panes. Defaults to true.\r\n\t*/\r\n\tget allowFloatingPanesResize() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowFloatingPanesResize(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowFloatingPanesResize\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Disables the built-in keyboard shortcuts for pane navigation. Defaults to false.\r\n\t*/\r\n\tget disableKeyboardNavigation() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset disableKeyboardNavigation(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"disableKeyboardNavigation\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to inner dock panes. Defaults to true.\r\n\t*/\r\n\tget allowInnerDock() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowInnerDock(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowInnerDock\", this.i.l);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.layout && (this.layout as any).name && (this.layout as any).name == name) { return this.layout; }\r\n\tif (this.draggedPane && (this.draggedPane as any).name && (this.draggedPane as any).name == name) { return this.draggedPane; }\r\n\tif (this.dropPosition && (this.dropPosition as any).name && (this.dropPosition as any).name == name) { return this.dropPosition; }\r\n\tif (this.activePane && (this.activePane as any).name && (this.activePane as any).name == name) { return this.activePane; }\r\n\tif (this.maximizedPane && (this.maximizedPane as any).name && (this.maximizedPane as any).name == name) { return this.maximizedPane; }\r\n\tif (this.resourceStrings && (this.resourceStrings as any).name && (this.resourceStrings as any).name == name) { return this.resourceStrings; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        if (this.draggedPane && (this.draggedPane as any)._styling) {\r\n\t    (this.draggedPane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.activePane && (this.activePane as any)._styling) {\r\n\t    (this.activePane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.maximizedPane && (this.maximizedPane as any)._styling) {\r\n\t    (this.maximizedPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n\t/**\r\n\t * Focuses a pane from the layout.\r\n\t\r\n\t*/\r\n\tpublic focusPane(contentId: string) {\r\n\t\tthis.i.q(contentId);\r\n\t}\r\n\t\r\n\t    private _layoutChange: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void = null;\r\n\t    private _layoutChange_wrapped: any = null;\r\n\t\r\n\tpublic get layoutChange(): (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void {\r\n\treturn this._layoutChange;\r\n\t}\r\n\t    public set layoutChange(ev: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void) {\r\n\t        if (this._layoutChange_wrapped !== null) {\r\n\t            this.i.layoutChange = delegateRemove(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t            this._layoutChange_wrapped = null;\r\n\t            this._layoutChange = null;\r\n\t        }\r\n\t\r\n\t        this._layoutChange = ev;\r\n\t        this._layoutChange_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcLayoutChangeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeLayoutChange) {\r\n\t                        (this as any).beforeLayoutChange(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._layoutChange) {\r\n\t    this._layoutChange(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.layoutChange = delegateCombine(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t        if (this.i.layoutChangeChanged) {\r\n\t            this.i.layoutChangeChanged();\r\n\t        }\r\n\t;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSplitPaneModule } from './igc-split-pane-module';\r\nimport { IgcContentPaneModule } from './igc-content-pane-module';\r\nimport { IgcDocumentHostModule } from './igc-document-host-module';\r\nimport { IgcTabGroupPaneModule } from './igc-tab-group-pane-module';\r\nimport { IgcTabHeaderElementModule } from './igc-tab-header-element-module';\r\nimport { IgcDockManagerComponent } from './igc-dock-manager-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcDockManagerModule {\r\n    public static register() {\r\n                IgcSplitPaneModule.register();\r\n        IgcContentPaneModule.register();\r\n        IgcDocumentHostModule.register();\r\n        IgcTabGroupPaneModule.register();\r\n        IgcTabHeaderElementModule.register();\r\n        IgcDockManagerComponent.register();\r\n        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);\r\n\r\n    }\r\n}"],"names":["DockManagerPaneType","DockManagerPaneType_$type","SplitPaneOrientation","SplitPaneOrientation_$type","UnpinnedLocation","UnpinnedLocation_$type","DockManagerPoint","a","WCNativeHelper","e","b","this","nativeElement","l","setNativeElement","c","k","value_","s","d","$t","DockManagerPane","___mustPassByValue","static","native_","undefined","toLowerCase","SplitPane","ContentPane","TabGroupPane","DocumentHost","g","j","h","ret_","getEnumValue","f","m","toString","i","$","o","ContentPaneCollection","v","ab","x","z","aa","ac","ad","y","t","n","u","r","q","p","ObservableCollection$1","constructor","super","specialize","DockManagerPaneCollection","createFromNative","IgcDockManagerPaneComponent","createImplementation","_implementation","internal","$type","externalName","name","isRegistered","create","onImplementationCreated","_settingAttributes","_attached","_queuedSetAttributes","_updatingFromAttribute","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_styling","ensureStylablePatched","Object","getPrototypeOf","externalObject","_enqueueSetAttribute","attrName","attrValue","push","_flushQueuedAttributes","length","setAttribute","_a","attributeChangedCallback","oldValue","newValue","setName","findByName","findEphemera","indexOf","hasUserValues","__m","propertyName","add","container","component","parent","genericPrefix","typeName","substring","additionalPrefixes","prefix","baseType","Name","basePrefix","parentTypeName","parentPrefix","_otherStyling","IgcDockManagerPaneCollection","IgCollection","list","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","_createFromInternal","IgcDockManagerPoint","_provideImplementation","element","IgcSplitPaneComponent","_panes","id","Type","orientation","panes","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","_inner","clear","size","floatingLocation","floatingWidth","floatingHeight","floatingResizable","allowEmpty","isMaximized","IgcSplitPaneModule","register","registerCons","IgcContentPaneComponent","contentId","header","headerId","tabHeaderId","unpinnedHeaderId","floatingHeaderId","allowClose","allowMaximize","allowPinning","allowDocking","acceptsInnerDock","allowFloating","unpinnedSize","isPinned","unpinnedLocation","hidden","disabled","documentOnly","IgcContentPaneModule","IgcDocumentHostComponent","rootPane","IgcDocumentHostModule","IgcContentPaneCollection","IgcTabGroupPaneComponent","selectedIndex","IgcTabGroupPaneModule","DragService","IgcDragService","DockManagerShowHeaderIconOnHover","TabHeaderElement","BaseElement","IgcTabHeaderElement","dragService","IgcTabHeaderElementModule","IgcSplitPaneCollection","SplitPaneCollection","DockManagerLayout","IgcDockManagerLayout","_floatingPanes","floatingPanes","DockManagerShowHeaderIconOnHover_$type","DockManagerResourceStrings","IgcDockManagerResourceStrings","close","pin","unpin","maximize","minimize","moreOptions","moreTabs","documents","LayoutChangeEventArgs","$ret","IgcLayoutChangeEventArgs","detail","DockManager","layoutChange","layoutChangeChanged","focusPane","IgcDockManagerComponent","_layoutChange","_layoutChange_wrapped","layout","draggedPane","dropPosition","activePane","showHeaderIconOnHover","maximizedPane","resourceStrings","allowFloatingPanesResize","disableKeyboardNavigation","allowInnerDock","ev","outerArgs","beforeLayoutChange","IgcDockManagerModule"],"sourceRoot":""}